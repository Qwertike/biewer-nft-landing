"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb_dist_esm_insight_common_js"],{

/***/ "./node_modules/thirdweb/dist/esm/insight/common.js":
/*!**********************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/insight/common.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertInsightEnabled: function() { return /* binding */ assertInsightEnabled; }\n/* harmony export */ });\n/* harmony import */ var _chains_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../chains/utils.js */ \"./node_modules/thirdweb/dist/esm/chains/utils.js\");\n\nasync function assertInsightEnabled(chains) {\n    const chainData = await Promise.all(chains.map((chain) => (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_0__.getChainServices)(chain).then((services) => ({\n        chain,\n        enabled: services.some((c) => c.service === \"insight\" && c.enabled),\n    }))));\n    const insightEnabled = chainData.every((c) => c.enabled);\n    if (!insightEnabled) {\n        throw new Error(`Insight is not available for chains ${chainData\n            .filter((c) => !c.enabled)\n            .map((c) => c.chain.id)\n            .join(\", \")}`);\n    }\n}\n//# sourceMappingURL=common.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vaW5zaWdodC9jb21tb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0Q7QUFDL0M7QUFDUCw4REFBOEQsa0VBQWdCO0FBQzlFO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLCtEQUErRDtBQUMvRDtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vaW5zaWdodC9jb21tb24uanM/NGNlZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDaGFpblNlcnZpY2VzIH0gZnJvbSBcIi4uL2NoYWlucy91dGlscy5qc1wiO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFzc2VydEluc2lnaHRFbmFibGVkKGNoYWlucykge1xuICAgIGNvbnN0IGNoYWluRGF0YSA9IGF3YWl0IFByb21pc2UuYWxsKGNoYWlucy5tYXAoKGNoYWluKSA9PiBnZXRDaGFpblNlcnZpY2VzKGNoYWluKS50aGVuKChzZXJ2aWNlcykgPT4gKHtcbiAgICAgICAgY2hhaW4sXG4gICAgICAgIGVuYWJsZWQ6IHNlcnZpY2VzLnNvbWUoKGMpID0+IGMuc2VydmljZSA9PT0gXCJpbnNpZ2h0XCIgJiYgYy5lbmFibGVkKSxcbiAgICB9KSkpKTtcbiAgICBjb25zdCBpbnNpZ2h0RW5hYmxlZCA9IGNoYWluRGF0YS5ldmVyeSgoYykgPT4gYy5lbmFibGVkKTtcbiAgICBpZiAoIWluc2lnaHRFbmFibGVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSW5zaWdodCBpcyBub3QgYXZhaWxhYmxlIGZvciBjaGFpbnMgJHtjaGFpbkRhdGFcbiAgICAgICAgICAgIC5maWx0ZXIoKGMpID0+ICFjLmVuYWJsZWQpXG4gICAgICAgICAgICAubWFwKChjKSA9PiBjLmNoYWluLmlkKVxuICAgICAgICAgICAgLmpvaW4oXCIsIFwiKX1gKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21tb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/insight/common.js\n"));

/***/ })

}]);