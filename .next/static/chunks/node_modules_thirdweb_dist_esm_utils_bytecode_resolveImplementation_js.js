"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb_dist_esm_utils_bytecode_resolveImplementation_js"],{

/***/ "./node_modules/thirdweb/dist/esm/utils/bytecode/extractMinimalProxyImplementationAddress.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/bytecode/extractMinimalProxyImplementationAddress.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractMinimalProxyImplementationAddress: function() { return /* binding */ extractMinimalProxyImplementationAddress; }\n/* harmony export */ });\n/**\n * Extracts the implementation address from a given bytecode string if it matches any of the known minimal proxy patterns.\n * @param bytecode The bytecode string to extract the implementation address from.\n * @returns The implementation address as a string if a match is found, otherwise undefined.\n * @example\n * ```ts\n * import { extractMinimalProxyImplementationAddress } from \"thirdweb/utils\";\n * const bytecode = \"0x363d3d373d3d3d363d73...\";\n * const implementationAddress = extractMinimalProxyImplementationAddress(bytecode);\n * ```\n * @utils\n */\nfunction extractMinimalProxyImplementationAddress(bytecode) {\n    if (!bytecode.startsWith(\"0x\")) {\n        // biome-ignore lint/style/noParameterAssign: perf\n        bytecode = `0x${bytecode}`;\n    }\n    // EIP-1167 clone minimal proxy - https://eips.ethereum.org/EIPS/eip-1167\n    if (bytecode.startsWith(\"0x363d3d373d3d3d363d73\")) {\n        const implementationAddress = bytecode.slice(22, 62);\n        return `0x${implementationAddress}`;\n    }\n    // Minimal Proxy with receive() from 0xSplits - https://github.com/0xSplits/splits-contracts/blob/c7b741926ec9746182d0d1e2c4c2046102e5d337/contracts/libraries/Clones.sol\n    if (bytecode.startsWith(\"0x36603057343d5230\")) {\n        // +40 = size of addr\n        const implementationAddress = bytecode.slice(122, 122 + 40);\n        return `0x${implementationAddress}`;\n    }\n    // 0age's minimal proxy - https://medium.com/coinmonks/the-more-minimal-proxy-5756ae08ee48\n    if (bytecode.startsWith(\"0x3d3d3d3d363d3d37363d73\")) {\n        // +40 = size of addr\n        const implementationAddress = bytecode.slice(24, 24 + 40);\n        return `0x${implementationAddress}`;\n    }\n    // vyper's minimal proxy (uniswap v1) - https://etherscan.io/address/0x09cabec1ead1c0ba254b09efb3ee13841712be14#code\n    if (bytecode.startsWith(\"0x366000600037611000600036600073\")) {\n        const implementationAddress = bytecode.slice(32, 32 + 40);\n        return `0x${implementationAddress}`;\n    }\n    if (bytecode.startsWith(\"0x36600080376020600036600073\")) {\n        const implementationAddress = bytecode.slice(28, 28 + 40);\n        return `0x${implementationAddress}`;\n    }\n    // EIP-7511 minimal proxy with PUSH0 opcode - https://eips.ethereum.org/EIPS/eip-7511\n    if (bytecode.startsWith(\"0x365f5f375f5f365f73\")) {\n        const implementationAddress = bytecode.slice(20, 60);\n        return `0x${implementationAddress}`;\n    }\n    // EIP-7702 - https://eips.ethereum.org/EIPS/eip-7702#abstract\n    if (bytecode.length === 48 && bytecode.startsWith(\"0xef0100\")) {\n        const implementationAddress = bytecode.slice(8, 48);\n        return `0x${implementationAddress}`;\n    }\n    return undefined;\n}\n//# sourceMappingURL=extractMinimalProxyImplementationAddress.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvYnl0ZWNvZGUvZXh0cmFjdE1pbmltYWxQcm94eUltcGxlbWVudGF0aW9uQWRkcmVzcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQ0FBMkM7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLHdCQUF3QixTQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixzQkFBc0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixzQkFBc0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isc0JBQXNCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9ieXRlY29kZS9leHRyYWN0TWluaW1hbFByb3h5SW1wbGVtZW50YXRpb25BZGRyZXNzLmpzPzBhMDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRyYWN0cyB0aGUgaW1wbGVtZW50YXRpb24gYWRkcmVzcyBmcm9tIGEgZ2l2ZW4gYnl0ZWNvZGUgc3RyaW5nIGlmIGl0IG1hdGNoZXMgYW55IG9mIHRoZSBrbm93biBtaW5pbWFsIHByb3h5IHBhdHRlcm5zLlxuICogQHBhcmFtIGJ5dGVjb2RlIFRoZSBieXRlY29kZSBzdHJpbmcgdG8gZXh0cmFjdCB0aGUgaW1wbGVtZW50YXRpb24gYWRkcmVzcyBmcm9tLlxuICogQHJldHVybnMgVGhlIGltcGxlbWVudGF0aW9uIGFkZHJlc3MgYXMgYSBzdHJpbmcgaWYgYSBtYXRjaCBpcyBmb3VuZCwgb3RoZXJ3aXNlIHVuZGVmaW5lZC5cbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgZXh0cmFjdE1pbmltYWxQcm94eUltcGxlbWVudGF0aW9uQWRkcmVzcyB9IGZyb20gXCJ0aGlyZHdlYi91dGlsc1wiO1xuICogY29uc3QgYnl0ZWNvZGUgPSBcIjB4MzYzZDNkMzczZDNkM2QzNjNkNzMuLi5cIjtcbiAqIGNvbnN0IGltcGxlbWVudGF0aW9uQWRkcmVzcyA9IGV4dHJhY3RNaW5pbWFsUHJveHlJbXBsZW1lbnRhdGlvbkFkZHJlc3MoYnl0ZWNvZGUpO1xuICogYGBgXG4gKiBAdXRpbHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RNaW5pbWFsUHJveHlJbXBsZW1lbnRhdGlvbkFkZHJlc3MoYnl0ZWNvZGUpIHtcbiAgICBpZiAoIWJ5dGVjb2RlLnN0YXJ0c1dpdGgoXCIweFwiKSkge1xuICAgICAgICAvLyBiaW9tZS1pZ25vcmUgbGludC9zdHlsZS9ub1BhcmFtZXRlckFzc2lnbjogcGVyZlxuICAgICAgICBieXRlY29kZSA9IGAweCR7Ynl0ZWNvZGV9YDtcbiAgICB9XG4gICAgLy8gRUlQLTExNjcgY2xvbmUgbWluaW1hbCBwcm94eSAtIGh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtMTE2N1xuICAgIGlmIChieXRlY29kZS5zdGFydHNXaXRoKFwiMHgzNjNkM2QzNzNkM2QzZDM2M2Q3M1wiKSkge1xuICAgICAgICBjb25zdCBpbXBsZW1lbnRhdGlvbkFkZHJlc3MgPSBieXRlY29kZS5zbGljZSgyMiwgNjIpO1xuICAgICAgICByZXR1cm4gYDB4JHtpbXBsZW1lbnRhdGlvbkFkZHJlc3N9YDtcbiAgICB9XG4gICAgLy8gTWluaW1hbCBQcm94eSB3aXRoIHJlY2VpdmUoKSBmcm9tIDB4U3BsaXRzIC0gaHR0cHM6Ly9naXRodWIuY29tLzB4U3BsaXRzL3NwbGl0cy1jb250cmFjdHMvYmxvYi9jN2I3NDE5MjZlYzk3NDYxODJkMGQxZTJjNGMyMDQ2MTAyZTVkMzM3L2NvbnRyYWN0cy9saWJyYXJpZXMvQ2xvbmVzLnNvbFxuICAgIGlmIChieXRlY29kZS5zdGFydHNXaXRoKFwiMHgzNjYwMzA1NzM0M2Q1MjMwXCIpKSB7XG4gICAgICAgIC8vICs0MCA9IHNpemUgb2YgYWRkclxuICAgICAgICBjb25zdCBpbXBsZW1lbnRhdGlvbkFkZHJlc3MgPSBieXRlY29kZS5zbGljZSgxMjIsIDEyMiArIDQwKTtcbiAgICAgICAgcmV0dXJuIGAweCR7aW1wbGVtZW50YXRpb25BZGRyZXNzfWA7XG4gICAgfVxuICAgIC8vIDBhZ2UncyBtaW5pbWFsIHByb3h5IC0gaHR0cHM6Ly9tZWRpdW0uY29tL2NvaW5tb25rcy90aGUtbW9yZS1taW5pbWFsLXByb3h5LTU3NTZhZTA4ZWU0OFxuICAgIGlmIChieXRlY29kZS5zdGFydHNXaXRoKFwiMHgzZDNkM2QzZDM2M2QzZDM3MzYzZDczXCIpKSB7XG4gICAgICAgIC8vICs0MCA9IHNpemUgb2YgYWRkclxuICAgICAgICBjb25zdCBpbXBsZW1lbnRhdGlvbkFkZHJlc3MgPSBieXRlY29kZS5zbGljZSgyNCwgMjQgKyA0MCk7XG4gICAgICAgIHJldHVybiBgMHgke2ltcGxlbWVudGF0aW9uQWRkcmVzc31gO1xuICAgIH1cbiAgICAvLyB2eXBlcidzIG1pbmltYWwgcHJveHkgKHVuaXN3YXAgdjEpIC0gaHR0cHM6Ly9ldGhlcnNjYW4uaW8vYWRkcmVzcy8weDA5Y2FiZWMxZWFkMWMwYmEyNTRiMDllZmIzZWUxMzg0MTcxMmJlMTQjY29kZVxuICAgIGlmIChieXRlY29kZS5zdGFydHNXaXRoKFwiMHgzNjYwMDA2MDAwMzc2MTEwMDA2MDAwMzY2MDAwNzNcIikpIHtcbiAgICAgICAgY29uc3QgaW1wbGVtZW50YXRpb25BZGRyZXNzID0gYnl0ZWNvZGUuc2xpY2UoMzIsIDMyICsgNDApO1xuICAgICAgICByZXR1cm4gYDB4JHtpbXBsZW1lbnRhdGlvbkFkZHJlc3N9YDtcbiAgICB9XG4gICAgaWYgKGJ5dGVjb2RlLnN0YXJ0c1dpdGgoXCIweDM2NjAwMDgwMzc2MDIwNjAwMDM2NjAwMDczXCIpKSB7XG4gICAgICAgIGNvbnN0IGltcGxlbWVudGF0aW9uQWRkcmVzcyA9IGJ5dGVjb2RlLnNsaWNlKDI4LCAyOCArIDQwKTtcbiAgICAgICAgcmV0dXJuIGAweCR7aW1wbGVtZW50YXRpb25BZGRyZXNzfWA7XG4gICAgfVxuICAgIC8vIEVJUC03NTExIG1pbmltYWwgcHJveHkgd2l0aCBQVVNIMCBvcGNvZGUgLSBodHRwczovL2VpcHMuZXRoZXJldW0ub3JnL0VJUFMvZWlwLTc1MTFcbiAgICBpZiAoYnl0ZWNvZGUuc3RhcnRzV2l0aChcIjB4MzY1ZjVmMzc1ZjVmMzY1ZjczXCIpKSB7XG4gICAgICAgIGNvbnN0IGltcGxlbWVudGF0aW9uQWRkcmVzcyA9IGJ5dGVjb2RlLnNsaWNlKDIwLCA2MCk7XG4gICAgICAgIHJldHVybiBgMHgke2ltcGxlbWVudGF0aW9uQWRkcmVzc31gO1xuICAgIH1cbiAgICAvLyBFSVAtNzcwMiAtIGh0dHBzOi8vZWlwcy5ldGhlcmV1bS5vcmcvRUlQUy9laXAtNzcwMiNhYnN0cmFjdFxuICAgIGlmIChieXRlY29kZS5sZW5ndGggPT09IDQ4ICYmIGJ5dGVjb2RlLnN0YXJ0c1dpdGgoXCIweGVmMDEwMFwiKSkge1xuICAgICAgICBjb25zdCBpbXBsZW1lbnRhdGlvbkFkZHJlc3MgPSBieXRlY29kZS5zbGljZSg4LCA0OCk7XG4gICAgICAgIHJldHVybiBgMHgke2ltcGxlbWVudGF0aW9uQWRkcmVzc31gO1xuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXh0cmFjdE1pbmltYWxQcm94eUltcGxlbWVudGF0aW9uQWRkcmVzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/utils/bytecode/extractMinimalProxyImplementationAddress.js\n"));

/***/ }),

/***/ "./node_modules/thirdweb/dist/esm/utils/bytecode/resolveImplementation.js":
/*!********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/bytecode/resolveImplementation.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveImplementation: function() { return /* binding */ resolveImplementation; }\n/* harmony export */ });\n/* harmony import */ var _contract_actions_get_bytecode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../contract/actions/get-bytecode.js */ \"./node_modules/thirdweb/dist/esm/contract/actions/get-bytecode.js\");\n/* harmony import */ var _contract_contract_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../contract/contract.js */ \"./node_modules/thirdweb/dist/esm/contract/contract.js\");\n/* harmony import */ var _rpc_actions_eth_getStorageAt_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../rpc/actions/eth_getStorageAt.js */ \"./node_modules/thirdweb/dist/esm/rpc/actions/eth_getStorageAt.js\");\n/* harmony import */ var _rpc_rpc_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../rpc/rpc.js */ \"./node_modules/thirdweb/dist/esm/rpc/rpc.js\");\n/* harmony import */ var _transaction_read_contract_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../transaction/read-contract.js */ \"./node_modules/thirdweb/dist/esm/transaction/read-contract.js\");\n/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../address.js */ \"./node_modules/thirdweb/dist/esm/utils/address.js\");\n/* harmony import */ var _extractMinimalProxyImplementationAddress_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extractMinimalProxyImplementationAddress.js */ \"./node_modules/thirdweb/dist/esm/utils/bytecode/extractMinimalProxyImplementationAddress.js\");\n\n\n\n\n\n\n\n// TODO: move to const exports\nconst AddressZero = \"0x0000000000000000000000000000000000000000\";\nconst ZERO_BYTES32 = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n/**\n * Resolves the implementation address and bytecode for a given proxy contract.\n * @param contract The contract to resolve the implementation for.\n * @returns A promise that resolves to an object containing the implementation address and bytecode.\n * @example\n * ```ts\n * import { resolveImplementation } from \"thirdweb\";\n * const implementation = await resolveImplementation(contract);\n * ```\n * @contract\n */\nasync function resolveImplementation(\n// biome-ignore lint/suspicious/noExplicitAny: TODO: fix any\ncontract) {\n    const [originalBytecode, beacon] = await Promise.all([\n        (0,_contract_actions_get_bytecode_js__WEBPACK_IMPORTED_MODULE_0__.getBytecode)(contract),\n        getBeaconFromStorageSlot(contract),\n    ]);\n    // check minimal proxy first synchronously\n    const minimalProxyImplementationAddress = (0,_extractMinimalProxyImplementationAddress_js__WEBPACK_IMPORTED_MODULE_1__.extractMinimalProxyImplementationAddress)(originalBytecode);\n    if (minimalProxyImplementationAddress) {\n        return {\n            address: minimalProxyImplementationAddress,\n            bytecode: await (0,_contract_actions_get_bytecode_js__WEBPACK_IMPORTED_MODULE_0__.getBytecode)((0,_contract_contract_js__WEBPACK_IMPORTED_MODULE_2__.getContract)({\n                ...contract,\n                address: minimalProxyImplementationAddress,\n            })),\n        };\n    }\n    // check other proxy types\n    let implementationAddress;\n    if (beacon && beacon !== AddressZero) {\n        // In case of a BeaconProxy, it is setup as BeaconProxy --> Beacon --> Implementation\n        // Hence we replace the proxy address with Beacon address, and continue further resolving below\n        // biome-ignore lint/style/noParameterAssign: we purposefully mutate the contract object here\n        contract = (0,_contract_contract_js__WEBPACK_IMPORTED_MODULE_2__.getContract)({\n            ...contract,\n            address: beacon,\n        });\n        implementationAddress = await getImplementationFromContractCall(contract);\n    }\n    else {\n        implementationAddress = await getImplementationFromStorageSlot(contract);\n    }\n    if (implementationAddress &&\n        (0,_address_js__WEBPACK_IMPORTED_MODULE_3__.isAddress)(implementationAddress) &&\n        implementationAddress !== AddressZero) {\n        const implementationBytecode = await (0,_contract_actions_get_bytecode_js__WEBPACK_IMPORTED_MODULE_0__.getBytecode)({\n            ...contract,\n            address: implementationAddress,\n        });\n        // return the original contract bytecode if the implementation bytecode is empty\n        if (implementationBytecode === \"0x\") {\n            return {\n                address: contract.address,\n                bytecode: originalBytecode,\n            };\n        }\n        return {\n            address: implementationAddress,\n            bytecode: implementationBytecode,\n        };\n    }\n    return { address: contract.address, bytecode: originalBytecode };\n}\nasync function getBeaconFromStorageSlot(\n// biome-ignore lint/suspicious/noExplicitAny: TODO: fix any\ncontract) {\n    /**\n     * The storage slot of the Beacon as defined in EIP-1967\n     * See https://eips.ethereum.org/EIPS/eip-1967#beacon-contract-address\n     *\n     * bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1))\n     */\n    const rpcRequest = (0,_rpc_rpc_js__WEBPACK_IMPORTED_MODULE_4__.getRpcClient)({\n        client: contract.client,\n        chain: contract.chain,\n    });\n    try {\n        const proxyStorage = await (0,_rpc_actions_eth_getStorageAt_js__WEBPACK_IMPORTED_MODULE_5__.eth_getStorageAt)(rpcRequest, {\n            address: contract.address,\n            position: \"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\",\n        });\n        return `0x${proxyStorage.slice(-40)}`;\n    }\n    catch {\n        return undefined;\n    }\n}\nasync function getImplementationFromStorageSlot(\n// biome-ignore lint/suspicious/noExplicitAny: TODO: fix any\ncontract) {\n    const rpcRequest = (0,_rpc_rpc_js__WEBPACK_IMPORTED_MODULE_4__.getRpcClient)({\n        client: contract.client,\n        chain: contract.chain,\n    });\n    try {\n        const proxyStoragePromises = [\n            (0,_rpc_actions_eth_getStorageAt_js__WEBPACK_IMPORTED_MODULE_5__.eth_getStorageAt)(rpcRequest, {\n                address: contract.address,\n                position: \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\",\n            }),\n            (0,_rpc_actions_eth_getStorageAt_js__WEBPACK_IMPORTED_MODULE_5__.eth_getStorageAt)(rpcRequest, {\n                address: contract.address,\n                position: \n                // keccak256(\"matic.network.proxy.implementation\") - used in polygon USDT proxy: https://polygonscan.com/address/0xc2132d05d31c914a87c6611c10748aeb04b58e8f#code\n                \"0xbaab7dbf64751104133af04abc7d9979f0fda3b059a322a8333f533d3f32bf7f\",\n            }),\n            (0,_rpc_actions_eth_getStorageAt_js__WEBPACK_IMPORTED_MODULE_5__.eth_getStorageAt)(rpcRequest, {\n                address: contract.address,\n                position: \n                // keccak256(\"org.zeppelinos.proxy.implementation\") - e.g. base USDC proxy: https://basescan.org/address/0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913#code\n                \"0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\",\n            }),\n        ];\n        const proxyStorages = await Promise.all(proxyStoragePromises);\n        const proxyStorage = proxyStorages.find((storage) => storage !== ZERO_BYTES32);\n        return proxyStorage ? `0x${proxyStorage.slice(-40)}` : AddressZero;\n    }\n    catch {\n        return undefined;\n    }\n}\nconst UPGRADEABLE_PROXY_ABI = {\n    type: \"function\",\n    name: \"implementation\",\n    inputs: [],\n    outputs: [\n        {\n            type: \"address\",\n            name: \"\",\n            internalType: \"address\",\n        },\n    ],\n    stateMutability: \"view\",\n};\nasync function getImplementationFromContractCall(\n// biome-ignore lint/suspicious/noExplicitAny: TODO: fix any\ncontract) {\n    try {\n        return await (0,_transaction_read_contract_js__WEBPACK_IMPORTED_MODULE_6__.readContract)({ contract, method: UPGRADEABLE_PROXY_ABI });\n    }\n    catch {\n        return undefined;\n    }\n}\n//# sourceMappingURL=resolveImplementation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvYnl0ZWNvZGUvcmVzb2x2ZUltcGxlbWVudGF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXFFO0FBQ1o7QUFDZ0I7QUFDekI7QUFDa0I7QUFDeEI7QUFDK0Q7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx3QkFBd0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFFBQVEsOEVBQVc7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsOENBQThDLHNIQUF3QztBQUN0RjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsOEVBQVcsQ0FBQyxrRUFBVztBQUNuRDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0VBQVc7QUFDOUI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFTO0FBQ2pCO0FBQ0EsNkNBQTZDLDhFQUFXO0FBQ3hEO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHlEQUFZO0FBQ25DO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxtQ0FBbUMsa0ZBQWdCO0FBQ25EO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsb0JBQW9CLHdCQUF3QjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHlEQUFZO0FBQ25DO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVksa0ZBQWdCO0FBQzVCO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsWUFBWSxrRkFBZ0I7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsWUFBWSxrRkFBZ0I7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLHdCQUF3QjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDJFQUFZLEdBQUcseUNBQXlDO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvYnl0ZWNvZGUvcmVzb2x2ZUltcGxlbWVudGF0aW9uLmpzP2MyOTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Qnl0ZWNvZGUgfSBmcm9tIFwiLi4vLi4vY29udHJhY3QvYWN0aW9ucy9nZXQtYnl0ZWNvZGUuanNcIjtcbmltcG9ydCB7IGdldENvbnRyYWN0IH0gZnJvbSBcIi4uLy4uL2NvbnRyYWN0L2NvbnRyYWN0LmpzXCI7XG5pbXBvcnQgeyBldGhfZ2V0U3RvcmFnZUF0IH0gZnJvbSBcIi4uLy4uL3JwYy9hY3Rpb25zL2V0aF9nZXRTdG9yYWdlQXQuanNcIjtcbmltcG9ydCB7IGdldFJwY0NsaWVudCB9IGZyb20gXCIuLi8uLi9ycGMvcnBjLmpzXCI7XG5pbXBvcnQgeyByZWFkQ29udHJhY3QgfSBmcm9tIFwiLi4vLi4vdHJhbnNhY3Rpb24vcmVhZC1jb250cmFjdC5qc1wiO1xuaW1wb3J0IHsgaXNBZGRyZXNzIH0gZnJvbSBcIi4uL2FkZHJlc3MuanNcIjtcbmltcG9ydCB7IGV4dHJhY3RNaW5pbWFsUHJveHlJbXBsZW1lbnRhdGlvbkFkZHJlc3MgfSBmcm9tIFwiLi9leHRyYWN0TWluaW1hbFByb3h5SW1wbGVtZW50YXRpb25BZGRyZXNzLmpzXCI7XG4vLyBUT0RPOiBtb3ZlIHRvIGNvbnN0IGV4cG9ydHNcbmNvbnN0IEFkZHJlc3NaZXJvID0gXCIweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcIjtcbmNvbnN0IFpFUk9fQllURVMzMiA9IFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCI7XG4vKipcbiAqIFJlc29sdmVzIHRoZSBpbXBsZW1lbnRhdGlvbiBhZGRyZXNzIGFuZCBieXRlY29kZSBmb3IgYSBnaXZlbiBwcm94eSBjb250cmFjdC5cbiAqIEBwYXJhbSBjb250cmFjdCBUaGUgY29udHJhY3QgdG8gcmVzb2x2ZSB0aGUgaW1wbGVtZW50YXRpb24gZm9yLlxuICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gYW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGltcGxlbWVudGF0aW9uIGFkZHJlc3MgYW5kIGJ5dGVjb2RlLlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyByZXNvbHZlSW1wbGVtZW50YXRpb24gfSBmcm9tIFwidGhpcmR3ZWJcIjtcbiAqIGNvbnN0IGltcGxlbWVudGF0aW9uID0gYXdhaXQgcmVzb2x2ZUltcGxlbWVudGF0aW9uKGNvbnRyYWN0KTtcbiAqIGBgYFxuICogQGNvbnRyYWN0XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZXNvbHZlSW1wbGVtZW50YXRpb24oXG4vLyBiaW9tZS1pZ25vcmUgbGludC9zdXNwaWNpb3VzL25vRXhwbGljaXRBbnk6IFRPRE86IGZpeCBhbnlcbmNvbnRyYWN0KSB7XG4gICAgY29uc3QgW29yaWdpbmFsQnl0ZWNvZGUsIGJlYWNvbl0gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgIGdldEJ5dGVjb2RlKGNvbnRyYWN0KSxcbiAgICAgICAgZ2V0QmVhY29uRnJvbVN0b3JhZ2VTbG90KGNvbnRyYWN0KSxcbiAgICBdKTtcbiAgICAvLyBjaGVjayBtaW5pbWFsIHByb3h5IGZpcnN0IHN5bmNocm9ub3VzbHlcbiAgICBjb25zdCBtaW5pbWFsUHJveHlJbXBsZW1lbnRhdGlvbkFkZHJlc3MgPSBleHRyYWN0TWluaW1hbFByb3h5SW1wbGVtZW50YXRpb25BZGRyZXNzKG9yaWdpbmFsQnl0ZWNvZGUpO1xuICAgIGlmIChtaW5pbWFsUHJveHlJbXBsZW1lbnRhdGlvbkFkZHJlc3MpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGFkZHJlc3M6IG1pbmltYWxQcm94eUltcGxlbWVudGF0aW9uQWRkcmVzcyxcbiAgICAgICAgICAgIGJ5dGVjb2RlOiBhd2FpdCBnZXRCeXRlY29kZShnZXRDb250cmFjdCh7XG4gICAgICAgICAgICAgICAgLi4uY29udHJhY3QsXG4gICAgICAgICAgICAgICAgYWRkcmVzczogbWluaW1hbFByb3h5SW1wbGVtZW50YXRpb25BZGRyZXNzLFxuICAgICAgICAgICAgfSkpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvLyBjaGVjayBvdGhlciBwcm94eSB0eXBlc1xuICAgIGxldCBpbXBsZW1lbnRhdGlvbkFkZHJlc3M7XG4gICAgaWYgKGJlYWNvbiAmJiBiZWFjb24gIT09IEFkZHJlc3NaZXJvKSB7XG4gICAgICAgIC8vIEluIGNhc2Ugb2YgYSBCZWFjb25Qcm94eSwgaXQgaXMgc2V0dXAgYXMgQmVhY29uUHJveHkgLS0+IEJlYWNvbiAtLT4gSW1wbGVtZW50YXRpb25cbiAgICAgICAgLy8gSGVuY2Ugd2UgcmVwbGFjZSB0aGUgcHJveHkgYWRkcmVzcyB3aXRoIEJlYWNvbiBhZGRyZXNzLCBhbmQgY29udGludWUgZnVydGhlciByZXNvbHZpbmcgYmVsb3dcbiAgICAgICAgLy8gYmlvbWUtaWdub3JlIGxpbnQvc3R5bGUvbm9QYXJhbWV0ZXJBc3NpZ246IHdlIHB1cnBvc2VmdWxseSBtdXRhdGUgdGhlIGNvbnRyYWN0IG9iamVjdCBoZXJlXG4gICAgICAgIGNvbnRyYWN0ID0gZ2V0Q29udHJhY3Qoe1xuICAgICAgICAgICAgLi4uY29udHJhY3QsXG4gICAgICAgICAgICBhZGRyZXNzOiBiZWFjb24sXG4gICAgICAgIH0pO1xuICAgICAgICBpbXBsZW1lbnRhdGlvbkFkZHJlc3MgPSBhd2FpdCBnZXRJbXBsZW1lbnRhdGlvbkZyb21Db250cmFjdENhbGwoY29udHJhY3QpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaW1wbGVtZW50YXRpb25BZGRyZXNzID0gYXdhaXQgZ2V0SW1wbGVtZW50YXRpb25Gcm9tU3RvcmFnZVNsb3QoY29udHJhY3QpO1xuICAgIH1cbiAgICBpZiAoaW1wbGVtZW50YXRpb25BZGRyZXNzICYmXG4gICAgICAgIGlzQWRkcmVzcyhpbXBsZW1lbnRhdGlvbkFkZHJlc3MpICYmXG4gICAgICAgIGltcGxlbWVudGF0aW9uQWRkcmVzcyAhPT0gQWRkcmVzc1plcm8pIHtcbiAgICAgICAgY29uc3QgaW1wbGVtZW50YXRpb25CeXRlY29kZSA9IGF3YWl0IGdldEJ5dGVjb2RlKHtcbiAgICAgICAgICAgIC4uLmNvbnRyYWN0LFxuICAgICAgICAgICAgYWRkcmVzczogaW1wbGVtZW50YXRpb25BZGRyZXNzLFxuICAgICAgICB9KTtcbiAgICAgICAgLy8gcmV0dXJuIHRoZSBvcmlnaW5hbCBjb250cmFjdCBieXRlY29kZSBpZiB0aGUgaW1wbGVtZW50YXRpb24gYnl0ZWNvZGUgaXMgZW1wdHlcbiAgICAgICAgaWYgKGltcGxlbWVudGF0aW9uQnl0ZWNvZGUgPT09IFwiMHhcIikge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBhZGRyZXNzOiBjb250cmFjdC5hZGRyZXNzLFxuICAgICAgICAgICAgICAgIGJ5dGVjb2RlOiBvcmlnaW5hbEJ5dGVjb2RlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYWRkcmVzczogaW1wbGVtZW50YXRpb25BZGRyZXNzLFxuICAgICAgICAgICAgYnl0ZWNvZGU6IGltcGxlbWVudGF0aW9uQnl0ZWNvZGUsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7IGFkZHJlc3M6IGNvbnRyYWN0LmFkZHJlc3MsIGJ5dGVjb2RlOiBvcmlnaW5hbEJ5dGVjb2RlIH07XG59XG5hc3luYyBmdW5jdGlvbiBnZXRCZWFjb25Gcm9tU3RvcmFnZVNsb3QoXG4vLyBiaW9tZS1pZ25vcmUgbGludC9zdXNwaWNpb3VzL25vRXhwbGljaXRBbnk6IFRPRE86IGZpeCBhbnlcbmNvbnRyYWN0KSB7XG4gICAgLyoqXG4gICAgICogVGhlIHN0b3JhZ2Ugc2xvdCBvZiB0aGUgQmVhY29uIGFzIGRlZmluZWQgaW4gRUlQLTE5NjdcbiAgICAgKiBTZWUgaHR0cHM6Ly9laXBzLmV0aGVyZXVtLm9yZy9FSVBTL2VpcC0xOTY3I2JlYWNvbi1jb250cmFjdC1hZGRyZXNzXG4gICAgICpcbiAgICAgKiBieXRlczMyKHVpbnQyNTYoa2VjY2FrMjU2KCdlaXAxOTY3LnByb3h5LmJlYWNvbicpKSAtIDEpKVxuICAgICAqL1xuICAgIGNvbnN0IHJwY1JlcXVlc3QgPSBnZXRScGNDbGllbnQoe1xuICAgICAgICBjbGllbnQ6IGNvbnRyYWN0LmNsaWVudCxcbiAgICAgICAgY2hhaW46IGNvbnRyYWN0LmNoYWluLFxuICAgIH0pO1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHByb3h5U3RvcmFnZSA9IGF3YWl0IGV0aF9nZXRTdG9yYWdlQXQocnBjUmVxdWVzdCwge1xuICAgICAgICAgICAgYWRkcmVzczogY29udHJhY3QuYWRkcmVzcyxcbiAgICAgICAgICAgIHBvc2l0aW9uOiBcIjB4YTNmMGFkNzRlNTQyM2FlYmZkODBkM2VmNDM0NjU3ODMzNWE5YTcyYWVhZWU1OWZmNmNiMzU4MmIzNTEzM2Q1MFwiLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGAweCR7cHJveHlTdG9yYWdlLnNsaWNlKC00MCl9YDtcbiAgICB9XG4gICAgY2F0Y2gge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn1cbmFzeW5jIGZ1bmN0aW9uIGdldEltcGxlbWVudGF0aW9uRnJvbVN0b3JhZ2VTbG90KFxuLy8gYmlvbWUtaWdub3JlIGxpbnQvc3VzcGljaW91cy9ub0V4cGxpY2l0QW55OiBUT0RPOiBmaXggYW55XG5jb250cmFjdCkge1xuICAgIGNvbnN0IHJwY1JlcXVlc3QgPSBnZXRScGNDbGllbnQoe1xuICAgICAgICBjbGllbnQ6IGNvbnRyYWN0LmNsaWVudCxcbiAgICAgICAgY2hhaW46IGNvbnRyYWN0LmNoYWluLFxuICAgIH0pO1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHByb3h5U3RvcmFnZVByb21pc2VzID0gW1xuICAgICAgICAgICAgZXRoX2dldFN0b3JhZ2VBdChycGNSZXF1ZXN0LCB7XG4gICAgICAgICAgICAgICAgYWRkcmVzczogY29udHJhY3QuYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogXCIweDM2MDg5NGExM2JhMWEzMjEwNjY3YzgyODQ5MmRiOThkY2EzZTIwNzZjYzM3MzVhOTIwYTNjYTUwNWQzODJiYmNcIixcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgZXRoX2dldFN0b3JhZ2VBdChycGNSZXF1ZXN0LCB7XG4gICAgICAgICAgICAgICAgYWRkcmVzczogY29udHJhY3QuYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogXG4gICAgICAgICAgICAgICAgLy8ga2VjY2FrMjU2KFwibWF0aWMubmV0d29yay5wcm94eS5pbXBsZW1lbnRhdGlvblwiKSAtIHVzZWQgaW4gcG9seWdvbiBVU0RUIHByb3h5OiBodHRwczovL3BvbHlnb25zY2FuLmNvbS9hZGRyZXNzLzB4YzIxMzJkMDVkMzFjOTE0YTg3YzY2MTFjMTA3NDhhZWIwNGI1OGU4ZiNjb2RlXG4gICAgICAgICAgICAgICAgXCIweGJhYWI3ZGJmNjQ3NTExMDQxMzNhZjA0YWJjN2Q5OTc5ZjBmZGEzYjA1OWEzMjJhODMzM2Y1MzNkM2YzMmJmN2ZcIixcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgZXRoX2dldFN0b3JhZ2VBdChycGNSZXF1ZXN0LCB7XG4gICAgICAgICAgICAgICAgYWRkcmVzczogY29udHJhY3QuYWRkcmVzcyxcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogXG4gICAgICAgICAgICAgICAgLy8ga2VjY2FrMjU2KFwib3JnLnplcHBlbGlub3MucHJveHkuaW1wbGVtZW50YXRpb25cIikgLSBlLmcuIGJhc2UgVVNEQyBwcm94eTogaHR0cHM6Ly9iYXNlc2Nhbi5vcmcvYWRkcmVzcy8weDgzMzU4OWZDRDZlRGI2RTA4ZjRjN0MzMkQ0ZjcxYjU0YmRBMDI5MTMjY29kZVxuICAgICAgICAgICAgICAgIFwiMHg3MDUwYzllMGY0Y2E3NjljNjliZDNhOGVmNzQwYmMzNzkzNGY4ZTJjMDM2ZTVhNzIzZmQ4ZWUwNDhlZDNmOGMzXCIsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgXTtcbiAgICAgICAgY29uc3QgcHJveHlTdG9yYWdlcyA9IGF3YWl0IFByb21pc2UuYWxsKHByb3h5U3RvcmFnZVByb21pc2VzKTtcbiAgICAgICAgY29uc3QgcHJveHlTdG9yYWdlID0gcHJveHlTdG9yYWdlcy5maW5kKChzdG9yYWdlKSA9PiBzdG9yYWdlICE9PSBaRVJPX0JZVEVTMzIpO1xuICAgICAgICByZXR1cm4gcHJveHlTdG9yYWdlID8gYDB4JHtwcm94eVN0b3JhZ2Uuc2xpY2UoLTQwKX1gIDogQWRkcmVzc1plcm87XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG59XG5jb25zdCBVUEdSQURFQUJMRV9QUk9YWV9BQkkgPSB7XG4gICAgdHlwZTogXCJmdW5jdGlvblwiLFxuICAgIG5hbWU6IFwiaW1wbGVtZW50YXRpb25cIixcbiAgICBpbnB1dHM6IFtdLFxuICAgIG91dHB1dHM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgfSxcbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG59O1xuYXN5bmMgZnVuY3Rpb24gZ2V0SW1wbGVtZW50YXRpb25Gcm9tQ29udHJhY3RDYWxsKFxuLy8gYmlvbWUtaWdub3JlIGxpbnQvc3VzcGljaW91cy9ub0V4cGxpY2l0QW55OiBUT0RPOiBmaXggYW55XG5jb250cmFjdCkge1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBhd2FpdCByZWFkQ29udHJhY3QoeyBjb250cmFjdCwgbWV0aG9kOiBVUEdSQURFQUJMRV9QUk9YWV9BQkkgfSk7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNvbHZlSW1wbGVtZW50YXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/utils/bytecode/resolveImplementation.js\n"));

/***/ })

}]);