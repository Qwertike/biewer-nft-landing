"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb_dist_esm_utils_extensions_drops_fetch-proofs-for-claimers_js"],{

/***/ "./node_modules/thirdweb/dist/esm/merkletree/MerkleTree.js":
/*!*****************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/merkletree/MerkleTree.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MerkleTree: function() { return /* binding */ MerkleTree; }\n/* harmony export */ });\n/* harmony import */ var _utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/encoding/hex.js */ \"./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n/* harmony import */ var _utils_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/encoding/to-bytes.js */ \"./node_modules/thirdweb/dist/esm/utils/encoding/to-bytes.js\");\n/* harmony import */ var _utils_hashing_keccak256_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/hashing/keccak256.js */ \"./node_modules/thirdweb/dist/esm/utils/hashing/keccak256.js\");\n/* harmony import */ var _utils_uint8_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/uint8-array.js */ \"./node_modules/thirdweb/dist/esm/utils/uint8-array.js\");\n// ADAPTED FROM https://github.com/merkletreejs/merkletreejs\n\n\n\n\n/**\n * Class reprensenting a Merkle Tree\n * @namespace MerkleTree\n */\nclass MerkleTree {\n    constructor(leaves) {\n        Object.defineProperty(this, \"leaves\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"layers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.leaves = leaves.map((el) => el instanceof Uint8Array ? el : (0,_utils_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(el));\n        this.leaves = this.leaves.sort(_utils_uint8_array_js__WEBPACK_IMPORTED_MODULE_1__.compareUint8Arrays);\n        this.createHashes(this.leaves);\n    }\n    getHexRoot() {\n        return (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToHex)(this.getRoot());\n    }\n    getHexProof(leaf, index) {\n        return this.getProof(leaf, index).map((item) => (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_2__.uint8ArrayToHex)(item.data));\n    }\n    // private below\n    createHashes(nodes) {\n        this.layers = [nodes];\n        while (nodes.length > 1) {\n            const layerIndex = this.layers.length;\n            this.layers.push([]);\n            const layerLimit = nodes.length;\n            for (let i = 0; i < nodes.length; i += 2) {\n                if (i >= layerLimit) {\n                    // biome-ignore lint/style/noNonNullAssertion: in bounds\n                    this.layers[layerIndex].push(...nodes.slice(layerLimit));\n                    break;\n                }\n                if (i + 1 === nodes.length) {\n                    if (nodes.length % 2 === 1) {\n                        // push copy of hash and continue iteration\n                        // biome-ignore lint/style/noNonNullAssertion: in bounds\n                        this.layers[layerIndex].push(nodes[i]);\n                        continue;\n                    }\n                }\n                // biome-ignore lint/style/noNonNullAssertion: in bounds\n                const left = nodes[i];\n                // biome-ignore lint/style/noNonNullAssertion: in bounds\n                const right = i + 1 === nodes.length ? left : nodes[i + 1];\n                const combined = [left, right];\n                combined.sort(_utils_uint8_array_js__WEBPACK_IMPORTED_MODULE_1__.compareUint8Arrays);\n                const hash = (0,_utils_hashing_keccak256_js__WEBPACK_IMPORTED_MODULE_3__.keccak256)((0,_utils_uint8_array_js__WEBPACK_IMPORTED_MODULE_1__.concatUint8Arrays)(combined), \"bytes\");\n                // biome-ignore lint/style/noNonNullAssertion: in bounds\n                this.layers[layerIndex].push(hash);\n            }\n            // biome-ignore lint/style/noParameterAssign: part of the functionality\n            // biome-ignore lint/style/noNonNullAssertion: in bounds\n            nodes = this.layers[layerIndex];\n        }\n    }\n    getRoot() {\n        if (this.layers.length === 0) {\n            return new Uint8Array();\n        }\n        // biome-ignore lint/style/noNonNullAssertion: in bounds\n        return this.layers[this.layers.length - 1][0] || new Uint8Array();\n    }\n    getProof(leaf, index) {\n        if (typeof leaf === \"undefined\") {\n            throw new Error(\"leaf is required\");\n        }\n        // biome-ignore lint/style/noParameterAssign: part of the functionality\n        leaf = leaf instanceof Uint8Array ? leaf : (0,_utils_encoding_to_bytes_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(leaf);\n        const proof = [];\n        if (!Number.isInteger(index)) {\n            // biome-ignore lint/style/noParameterAssign: part of the functionality\n            index = -1;\n            for (let i = 0; i < this.leaves.length; i++) {\n                // biome-ignore lint/style/noNonNullAssertion: within bounds\n                if ((0,_utils_uint8_array_js__WEBPACK_IMPORTED_MODULE_1__.areUint8ArraysEqual)(leaf, this.leaves[i])) {\n                    // biome-ignore lint/style/noParameterAssign: part of the functionality\n                    index = i;\n                }\n            }\n        }\n        // @ts-expect-error - issue from original code\n        if (index <= -1) {\n            return [];\n        }\n        for (let i = 0; i < this.layers.length; i++) {\n            // biome-ignore lint/style/noNonNullAssertion: in bounds\n            const layer = this.layers[i];\n            // @ts-expect-error - issue from original code\n            const isRightNode = index % 2;\n            const pairIndex = isRightNode\n                ? // @ts-expect-error - issue from original code\n                    index - 1\n                : // Proof Generation for Non-Bitcoin Trees\n                    // @ts-expect-error - issue from original code\n                    index + 1;\n            if (pairIndex < layer.length) {\n                proof.push({\n                    position: isRightNode ? \"left\" : \"right\",\n                    data: layer[pairIndex],\n                });\n            }\n            // set index to parent index\n            // @ts-expect-error - issue from original code\n            // biome-ignore lint/style/noParameterAssign: part of the functionality\n            index = (index / 2) | 0;\n        }\n        // @ts-expect-error - issue from original code\n        return proof;\n    }\n}\n//# sourceMappingURL=MerkleTree.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/merkletree/MerkleTree.js\n"));

/***/ }),

/***/ "./node_modules/thirdweb/dist/esm/utils/extensions/drops/convert-quantity.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/extensions/drops/convert-quantity.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertQuantity: function() { return /* binding */ convertQuantity; }\n/* harmony export */ });\n/* harmony import */ var ox_Solidity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ox/Solidity */ \"./node_modules/ox/_esm/core/Solidity.js\");\n/* harmony import */ var _units_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../units.js */ \"./node_modules/thirdweb/dist/esm/utils/units.js\");\n\n\nfunction convertQuantity(options) {\n    const { quantity, tokenDecimals } = options;\n    if (quantity === \"unlimited\") {\n        return ox_Solidity__WEBPACK_IMPORTED_MODULE_0__.maxUint256;\n    }\n    return (0,_units_js__WEBPACK_IMPORTED_MODULE_1__.toUnits)(quantity, tokenDecimals);\n}\n//# sourceMappingURL=convert-quantity.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvZXh0ZW5zaW9ucy9kcm9wcy9jb252ZXJ0LXF1YW50aXR5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5QztBQUNBO0FBQ2xDO0FBQ1AsWUFBWSwwQkFBMEI7QUFDdEM7QUFDQSxlQUFlLG1EQUFVO0FBQ3pCO0FBQ0EsV0FBVyxrREFBTztBQUNsQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9leHRlbnNpb25zL2Ryb3BzL2NvbnZlcnQtcXVhbnRpdHkuanM/MzhjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXhVaW50MjU2IH0gZnJvbSBcIm94L1NvbGlkaXR5XCI7XG5pbXBvcnQgeyB0b1VuaXRzIH0gZnJvbSBcIi4uLy4uL3VuaXRzLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gY29udmVydFF1YW50aXR5KG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IHF1YW50aXR5LCB0b2tlbkRlY2ltYWxzIH0gPSBvcHRpb25zO1xuICAgIGlmIChxdWFudGl0eSA9PT0gXCJ1bmxpbWl0ZWRcIikge1xuICAgICAgICByZXR1cm4gbWF4VWludDI1NjtcbiAgICB9XG4gICAgcmV0dXJuIHRvVW5pdHMocXVhbnRpdHksIHRva2VuRGVjaW1hbHMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udmVydC1xdWFudGl0eS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/utils/extensions/drops/convert-quantity.js\n"));

/***/ }),

/***/ "./node_modules/thirdweb/dist/esm/utils/extensions/drops/fetch-proofs-for-claimers.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/extensions/drops/fetch-proofs-for-claimers.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchProofsForClaimer: function() { return /* binding */ fetchProofsForClaimer; }\n/* harmony export */ });\n/* harmony import */ var _constants_addresses_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../constants/addresses.js */ \"./node_modules/thirdweb/dist/esm/constants/addresses.js\");\n/* harmony import */ var _merkletree_MerkleTree_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../merkletree/MerkleTree.js */ \"./node_modules/thirdweb/dist/esm/merkletree/MerkleTree.js\");\n/* harmony import */ var _storage_download_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../storage/download.js */ \"./node_modules/thirdweb/dist/esm/storage/download.js\");\n/* harmony import */ var _convert_quantity_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./convert-quantity.js */ \"./node_modules/thirdweb/dist/esm/utils/extensions/drops/convert-quantity.js\");\n/* harmony import */ var _hash_entry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hash-entry.js */ \"./node_modules/thirdweb/dist/esm/utils/extensions/drops/hash-entry.js\");\n\n\n\n\n\nasync function fetchProofsForClaimer(options) {\n    const { contract, merkleTreeUri, claimer } = options;\n    const hashEntryFn = options.hashEntry || _hash_entry_js__WEBPACK_IMPORTED_MODULE_0__.hashEntry;\n    // 2. download snapshot data\n    const response = await (0,_storage_download_js__WEBPACK_IMPORTED_MODULE_1__.download)({\n        client: contract.client,\n        uri: merkleTreeUri,\n    });\n    const merkleInfo = await response.json();\n    // 3. download shard data based off the user address\n    const shardId = claimer.slice(2, 2 + merkleInfo.shardNybbles).toLowerCase();\n    const uri = merkleInfo.baseUri.endsWith(\"/\")\n        ? merkleInfo.baseUri\n        : `${merkleInfo.baseUri}/`;\n    let shardData;\n    try {\n        const constructedShardUri = `${uri}${shardId}.json`;\n        const shard = await (0,_storage_download_js__WEBPACK_IMPORTED_MODULE_1__.download)({\n            client: contract.client,\n            uri: constructedShardUri,\n        });\n        shardData = await shard.json();\n    }\n    catch {\n        // if the file can't be fetched it means claimer not in merkle tree\n        return null;\n    }\n    // 4. hash all the entries in that shard and construct the sub merkle tree\n    const hashedEntries = await Promise.all(shardData.entries.map(async (entry) => {\n        return hashEntryFn({\n            entry,\n            chain: contract.chain,\n            client: contract.client,\n            tokenDecimals: options.tokenDecimals,\n        });\n    }));\n    // 5. get the proof for the claimer + the sub merkle tree root\n    const tree = new _merkletree_MerkleTree_js__WEBPACK_IMPORTED_MODULE_2__.MerkleTree(hashedEntries);\n    const entry = shardData.entries.find((i) => i.address.toLowerCase() === claimer.toLowerCase());\n    if (!entry) {\n        return null;\n    }\n    const proof = tree\n        .getHexProof(await hashEntryFn({\n        entry,\n        chain: contract.chain,\n        client: contract.client,\n        tokenDecimals: options.tokenDecimals,\n    }))\n        .concat(shardData.proofs);\n    // 6. return the proof and the entry data for the contract call\n    const currencyAddress = (entry.currencyAddress || _constants_addresses_js__WEBPACK_IMPORTED_MODULE_3__.ZERO_ADDRESS);\n    const currencyDecimals = await (async () => {\n        if ((0,_constants_addresses_js__WEBPACK_IMPORTED_MODULE_3__.isNativeTokenAddress)(currencyAddress) ||\n            currencyAddress === _constants_addresses_js__WEBPACK_IMPORTED_MODULE_3__.ZERO_ADDRESS) {\n            return 18;\n        }\n        const [{ getContract }, { decimals: getDecimals }] = await Promise.all([\n            Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../../contract/contract.js */ \"./node_modules/thirdweb/dist/esm/contract/contract.js\")),\n            Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../../extensions/erc20/read/decimals.js */ \"./node_modules/thirdweb/dist/esm/extensions/erc20/read/decimals.js\")),\n        ]);\n        const currencyContract = getContract({\n            address: currencyAddress,\n            chain: contract.chain,\n            client: contract.client,\n        });\n        return await getDecimals({ contract: currencyContract });\n    })();\n    return {\n        proof,\n        quantityLimitPerWallet: (0,_convert_quantity_js__WEBPACK_IMPORTED_MODULE_4__.convertQuantity)({\n            quantity: entry.maxClaimable || \"unlimited\",\n            tokenDecimals: options.tokenDecimals,\n        }),\n        pricePerToken: (0,_convert_quantity_js__WEBPACK_IMPORTED_MODULE_4__.convertQuantity)({\n            quantity: entry.price || \"unlimited\",\n            tokenDecimals: currencyDecimals,\n        }),\n        currency: currencyAddress,\n    };\n}\n//# sourceMappingURL=fetch-proofs-for-claimers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvZXh0ZW5zaW9ucy9kcm9wcy9mZXRjaC1wcm9vZnMtZm9yLWNsYWltZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzRjtBQUN2QjtBQUNQO0FBQ0E7QUFDWjtBQUNyQztBQUNQLFlBQVksbUNBQW1DO0FBQy9DLDZDQUE2QyxxREFBUztBQUN0RDtBQUNBLDJCQUEyQiw4REFBUTtBQUNuQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1CQUFtQjtBQUNoQztBQUNBO0FBQ0EsdUNBQXVDLElBQUksRUFBRSxRQUFRO0FBQ3JELDRCQUE0Qiw4REFBUTtBQUNwQztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLHFCQUFxQixpRUFBVTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esc0RBQXNELGlFQUFZO0FBQ2xFO0FBQ0EsWUFBWSw2RUFBb0I7QUFDaEMsZ0NBQWdDLGlFQUFZO0FBQzVDO0FBQ0E7QUFDQSxpQkFBaUIsYUFBYSxJQUFJLHVCQUF1QjtBQUN6RCxZQUFZLGtMQUF1QztBQUNuRCxZQUFZLDRNQUFvRDtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULG1DQUFtQyw0QkFBNEI7QUFDL0QsS0FBSztBQUNMO0FBQ0E7QUFDQSxnQ0FBZ0MscUVBQWU7QUFDL0M7QUFDQTtBQUNBLFNBQVM7QUFDVCx1QkFBdUIscUVBQWU7QUFDdEM7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvZXh0ZW5zaW9ucy9kcm9wcy9mZXRjaC1wcm9vZnMtZm9yLWNsYWltZXJzLmpzPzkwYTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgWkVST19BRERSRVNTLCBpc05hdGl2ZVRva2VuQWRkcmVzcywgfSBmcm9tIFwiLi4vLi4vLi4vY29uc3RhbnRzL2FkZHJlc3Nlcy5qc1wiO1xuaW1wb3J0IHsgTWVya2xlVHJlZSB9IGZyb20gXCIuLi8uLi8uLi9tZXJrbGV0cmVlL01lcmtsZVRyZWUuanNcIjtcbmltcG9ydCB7IGRvd25sb2FkIH0gZnJvbSBcIi4uLy4uLy4uL3N0b3JhZ2UvZG93bmxvYWQuanNcIjtcbmltcG9ydCB7IGNvbnZlcnRRdWFudGl0eSB9IGZyb20gXCIuL2NvbnZlcnQtcXVhbnRpdHkuanNcIjtcbmltcG9ydCB7IGhhc2hFbnRyeSB9IGZyb20gXCIuL2hhc2gtZW50cnkuanNcIjtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFByb29mc0ZvckNsYWltZXIob3B0aW9ucykge1xuICAgIGNvbnN0IHsgY29udHJhY3QsIG1lcmtsZVRyZWVVcmksIGNsYWltZXIgfSA9IG9wdGlvbnM7XG4gICAgY29uc3QgaGFzaEVudHJ5Rm4gPSBvcHRpb25zLmhhc2hFbnRyeSB8fCBoYXNoRW50cnk7XG4gICAgLy8gMi4gZG93bmxvYWQgc25hcHNob3QgZGF0YVxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZG93bmxvYWQoe1xuICAgICAgICBjbGllbnQ6IGNvbnRyYWN0LmNsaWVudCxcbiAgICAgICAgdXJpOiBtZXJrbGVUcmVlVXJpLFxuICAgIH0pO1xuICAgIGNvbnN0IG1lcmtsZUluZm8gPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgLy8gMy4gZG93bmxvYWQgc2hhcmQgZGF0YSBiYXNlZCBvZmYgdGhlIHVzZXIgYWRkcmVzc1xuICAgIGNvbnN0IHNoYXJkSWQgPSBjbGFpbWVyLnNsaWNlKDIsIDIgKyBtZXJrbGVJbmZvLnNoYXJkTnliYmxlcykudG9Mb3dlckNhc2UoKTtcbiAgICBjb25zdCB1cmkgPSBtZXJrbGVJbmZvLmJhc2VVcmkuZW5kc1dpdGgoXCIvXCIpXG4gICAgICAgID8gbWVya2xlSW5mby5iYXNlVXJpXG4gICAgICAgIDogYCR7bWVya2xlSW5mby5iYXNlVXJpfS9gO1xuICAgIGxldCBzaGFyZERhdGE7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgY29uc3RydWN0ZWRTaGFyZFVyaSA9IGAke3VyaX0ke3NoYXJkSWR9Lmpzb25gO1xuICAgICAgICBjb25zdCBzaGFyZCA9IGF3YWl0IGRvd25sb2FkKHtcbiAgICAgICAgICAgIGNsaWVudDogY29udHJhY3QuY2xpZW50LFxuICAgICAgICAgICAgdXJpOiBjb25zdHJ1Y3RlZFNoYXJkVXJpLFxuICAgICAgICB9KTtcbiAgICAgICAgc2hhcmREYXRhID0gYXdhaXQgc2hhcmQuanNvbigpO1xuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIC8vIGlmIHRoZSBmaWxlIGNhbid0IGJlIGZldGNoZWQgaXQgbWVhbnMgY2xhaW1lciBub3QgaW4gbWVya2xlIHRyZWVcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8vIDQuIGhhc2ggYWxsIHRoZSBlbnRyaWVzIGluIHRoYXQgc2hhcmQgYW5kIGNvbnN0cnVjdCB0aGUgc3ViIG1lcmtsZSB0cmVlXG4gICAgY29uc3QgaGFzaGVkRW50cmllcyA9IGF3YWl0IFByb21pc2UuYWxsKHNoYXJkRGF0YS5lbnRyaWVzLm1hcChhc3luYyAoZW50cnkpID0+IHtcbiAgICAgICAgcmV0dXJuIGhhc2hFbnRyeUZuKHtcbiAgICAgICAgICAgIGVudHJ5LFxuICAgICAgICAgICAgY2hhaW46IGNvbnRyYWN0LmNoYWluLFxuICAgICAgICAgICAgY2xpZW50OiBjb250cmFjdC5jbGllbnQsXG4gICAgICAgICAgICB0b2tlbkRlY2ltYWxzOiBvcHRpb25zLnRva2VuRGVjaW1hbHMsXG4gICAgICAgIH0pO1xuICAgIH0pKTtcbiAgICAvLyA1LiBnZXQgdGhlIHByb29mIGZvciB0aGUgY2xhaW1lciArIHRoZSBzdWIgbWVya2xlIHRyZWUgcm9vdFxuICAgIGNvbnN0IHRyZWUgPSBuZXcgTWVya2xlVHJlZShoYXNoZWRFbnRyaWVzKTtcbiAgICBjb25zdCBlbnRyeSA9IHNoYXJkRGF0YS5lbnRyaWVzLmZpbmQoKGkpID0+IGkuYWRkcmVzcy50b0xvd2VyQ2FzZSgpID09PSBjbGFpbWVyLnRvTG93ZXJDYXNlKCkpO1xuICAgIGlmICghZW50cnkpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IHByb29mID0gdHJlZVxuICAgICAgICAuZ2V0SGV4UHJvb2YoYXdhaXQgaGFzaEVudHJ5Rm4oe1xuICAgICAgICBlbnRyeSxcbiAgICAgICAgY2hhaW46IGNvbnRyYWN0LmNoYWluLFxuICAgICAgICBjbGllbnQ6IGNvbnRyYWN0LmNsaWVudCxcbiAgICAgICAgdG9rZW5EZWNpbWFsczogb3B0aW9ucy50b2tlbkRlY2ltYWxzLFxuICAgIH0pKVxuICAgICAgICAuY29uY2F0KHNoYXJkRGF0YS5wcm9vZnMpO1xuICAgIC8vIDYuIHJldHVybiB0aGUgcHJvb2YgYW5kIHRoZSBlbnRyeSBkYXRhIGZvciB0aGUgY29udHJhY3QgY2FsbFxuICAgIGNvbnN0IGN1cnJlbmN5QWRkcmVzcyA9IChlbnRyeS5jdXJyZW5jeUFkZHJlc3MgfHwgWkVST19BRERSRVNTKTtcbiAgICBjb25zdCBjdXJyZW5jeURlY2ltYWxzID0gYXdhaXQgKGFzeW5jICgpID0+IHtcbiAgICAgICAgaWYgKGlzTmF0aXZlVG9rZW5BZGRyZXNzKGN1cnJlbmN5QWRkcmVzcykgfHxcbiAgICAgICAgICAgIGN1cnJlbmN5QWRkcmVzcyA9PT0gWkVST19BRERSRVNTKSB7XG4gICAgICAgICAgICByZXR1cm4gMTg7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgW3sgZ2V0Q29udHJhY3QgfSwgeyBkZWNpbWFsczogZ2V0RGVjaW1hbHMgfV0gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgICAgICBpbXBvcnQoXCIuLi8uLi8uLi9jb250cmFjdC9jb250cmFjdC5qc1wiKSxcbiAgICAgICAgICAgIGltcG9ydChcIi4uLy4uLy4uL2V4dGVuc2lvbnMvZXJjMjAvcmVhZC9kZWNpbWFscy5qc1wiKSxcbiAgICAgICAgXSk7XG4gICAgICAgIGNvbnN0IGN1cnJlbmN5Q29udHJhY3QgPSBnZXRDb250cmFjdCh7XG4gICAgICAgICAgICBhZGRyZXNzOiBjdXJyZW5jeUFkZHJlc3MsXG4gICAgICAgICAgICBjaGFpbjogY29udHJhY3QuY2hhaW4sXG4gICAgICAgICAgICBjbGllbnQ6IGNvbnRyYWN0LmNsaWVudCxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBhd2FpdCBnZXREZWNpbWFscyh7IGNvbnRyYWN0OiBjdXJyZW5jeUNvbnRyYWN0IH0pO1xuICAgIH0pKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvb2YsXG4gICAgICAgIHF1YW50aXR5TGltaXRQZXJXYWxsZXQ6IGNvbnZlcnRRdWFudGl0eSh7XG4gICAgICAgICAgICBxdWFudGl0eTogZW50cnkubWF4Q2xhaW1hYmxlIHx8IFwidW5saW1pdGVkXCIsXG4gICAgICAgICAgICB0b2tlbkRlY2ltYWxzOiBvcHRpb25zLnRva2VuRGVjaW1hbHMsXG4gICAgICAgIH0pLFxuICAgICAgICBwcmljZVBlclRva2VuOiBjb252ZXJ0UXVhbnRpdHkoe1xuICAgICAgICAgICAgcXVhbnRpdHk6IGVudHJ5LnByaWNlIHx8IFwidW5saW1pdGVkXCIsXG4gICAgICAgICAgICB0b2tlbkRlY2ltYWxzOiBjdXJyZW5jeURlY2ltYWxzLFxuICAgICAgICB9KSxcbiAgICAgICAgY3VycmVuY3k6IGN1cnJlbmN5QWRkcmVzcyxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmV0Y2gtcHJvb2ZzLWZvci1jbGFpbWVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/utils/extensions/drops/fetch-proofs-for-claimers.js\n"));

/***/ }),

/***/ "./node_modules/thirdweb/dist/esm/utils/extensions/drops/hash-entry.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/extensions/drops/hash-entry.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashEntry: function() { return /* binding */ hashEntry; }\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"./node_modules/thirdweb/node_modules/viem/_esm/index.js\");\n/* harmony import */ var _constants_addresses_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../constants/addresses.js */ \"./node_modules/thirdweb/dist/esm/constants/addresses.js\");\n/* harmony import */ var _address_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../address.js */ \"./node_modules/thirdweb/dist/esm/utils/address.js\");\n/* harmony import */ var _hashing_keccak256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../hashing/keccak256.js */ \"./node_modules/thirdweb/dist/esm/utils/hashing/keccak256.js\");\n/* harmony import */ var _convert_quantity_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./convert-quantity.js */ \"./node_modules/thirdweb/dist/esm/utils/extensions/drops/convert-quantity.js\");\n\n\n\n\n\nasync function hashEntry(options) {\n    const currencyAddress = options.entry.currencyAddress || _constants_addresses_js__WEBPACK_IMPORTED_MODULE_0__.ZERO_ADDRESS;\n    const currencyDecimals = await (async () => {\n        if ((0,_constants_addresses_js__WEBPACK_IMPORTED_MODULE_0__.isNativeTokenAddress)(currencyAddress) ||\n            currencyAddress === _constants_addresses_js__WEBPACK_IMPORTED_MODULE_0__.ZERO_ADDRESS) {\n            return 18;\n        }\n        const [{ getContract }, { decimals: getDecimals }] = await Promise.all([\n            Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../../contract/contract.js */ \"./node_modules/thirdweb/dist/esm/contract/contract.js\")),\n            Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../../extensions/erc20/read/decimals.js */ \"./node_modules/thirdweb/dist/esm/extensions/erc20/read/decimals.js\")),\n        ]);\n        const currencyContract = getContract({\n            address: currencyAddress,\n            chain: options.chain,\n            client: options.client,\n        });\n        return await getDecimals({ contract: currencyContract });\n    })();\n    return (0,_hashing_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)((0,viem__WEBPACK_IMPORTED_MODULE_2__.encodePacked)([\"address\", \"uint256\", \"uint256\", \"address\"], [\n        (0,_address_js__WEBPACK_IMPORTED_MODULE_3__.getAddress)(options.entry.address),\n        (0,_convert_quantity_js__WEBPACK_IMPORTED_MODULE_4__.convertQuantity)({\n            quantity: options.entry.maxClaimable || \"unlimited\",\n            tokenDecimals: options.tokenDecimals,\n        }),\n        (0,_convert_quantity_js__WEBPACK_IMPORTED_MODULE_4__.convertQuantity)({\n            quantity: options.entry.price || \"unlimited\",\n            tokenDecimals: currencyDecimals,\n        }),\n        (0,_address_js__WEBPACK_IMPORTED_MODULE_3__.getAddress)(currencyAddress),\n    ]));\n}\n//# sourceMappingURL=hash-entry.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvZXh0ZW5zaW9ucy9kcm9wcy9oYXNoLWVudHJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvQztBQUNrRDtBQUN4QztBQUNTO0FBQ0M7QUFDakQ7QUFDUCw2REFBNkQsaUVBQVk7QUFDekU7QUFDQSxZQUFZLDZFQUFvQjtBQUNoQyxnQ0FBZ0MsaUVBQVk7QUFDNUM7QUFDQTtBQUNBLGlCQUFpQixhQUFhLElBQUksdUJBQXVCO0FBQ3pELFlBQVksa0xBQXVDO0FBQ25ELFlBQVksNE1BQW9EO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsbUNBQW1DLDRCQUE0QjtBQUMvRCxLQUFLO0FBQ0wsV0FBVyxnRUFBUyxDQUFDLGtEQUFZO0FBQ2pDLFFBQVEsdURBQVU7QUFDbEIsUUFBUSxxRUFBZTtBQUN2QjtBQUNBO0FBQ0EsU0FBUztBQUNULFFBQVEscUVBQWU7QUFDdkI7QUFDQTtBQUNBLFNBQVM7QUFDVCxRQUFRLHVEQUFVO0FBQ2xCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvZXh0ZW5zaW9ucy9kcm9wcy9oYXNoLWVudHJ5LmpzPzc2MTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlUGFja2VkIH0gZnJvbSBcInZpZW1cIjtcbmltcG9ydCB7IFpFUk9fQUREUkVTUywgaXNOYXRpdmVUb2tlbkFkZHJlc3MsIH0gZnJvbSBcIi4uLy4uLy4uL2NvbnN0YW50cy9hZGRyZXNzZXMuanNcIjtcbmltcG9ydCB7IGdldEFkZHJlc3MgfSBmcm9tIFwiLi4vLi4vYWRkcmVzcy5qc1wiO1xuaW1wb3J0IHsga2VjY2FrMjU2IH0gZnJvbSBcIi4uLy4uL2hhc2hpbmcva2VjY2FrMjU2LmpzXCI7XG5pbXBvcnQgeyBjb252ZXJ0UXVhbnRpdHkgfSBmcm9tIFwiLi9jb252ZXJ0LXF1YW50aXR5LmpzXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGFzaEVudHJ5KG9wdGlvbnMpIHtcbiAgICBjb25zdCBjdXJyZW5jeUFkZHJlc3MgPSBvcHRpb25zLmVudHJ5LmN1cnJlbmN5QWRkcmVzcyB8fCBaRVJPX0FERFJFU1M7XG4gICAgY29uc3QgY3VycmVuY3lEZWNpbWFscyA9IGF3YWl0IChhc3luYyAoKSA9PiB7XG4gICAgICAgIGlmIChpc05hdGl2ZVRva2VuQWRkcmVzcyhjdXJyZW5jeUFkZHJlc3MpIHx8XG4gICAgICAgICAgICBjdXJyZW5jeUFkZHJlc3MgPT09IFpFUk9fQUREUkVTUykge1xuICAgICAgICAgICAgcmV0dXJuIDE4O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IFt7IGdldENvbnRyYWN0IH0sIHsgZGVjaW1hbHM6IGdldERlY2ltYWxzIH1dID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgaW1wb3J0KFwiLi4vLi4vLi4vY29udHJhY3QvY29udHJhY3QuanNcIiksXG4gICAgICAgICAgICBpbXBvcnQoXCIuLi8uLi8uLi9leHRlbnNpb25zL2VyYzIwL3JlYWQvZGVjaW1hbHMuanNcIiksXG4gICAgICAgIF0pO1xuICAgICAgICBjb25zdCBjdXJyZW5jeUNvbnRyYWN0ID0gZ2V0Q29udHJhY3Qoe1xuICAgICAgICAgICAgYWRkcmVzczogY3VycmVuY3lBZGRyZXNzLFxuICAgICAgICAgICAgY2hhaW46IG9wdGlvbnMuY2hhaW4sXG4gICAgICAgICAgICBjbGllbnQ6IG9wdGlvbnMuY2xpZW50LFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGF3YWl0IGdldERlY2ltYWxzKHsgY29udHJhY3Q6IGN1cnJlbmN5Q29udHJhY3QgfSk7XG4gICAgfSkoKTtcbiAgICByZXR1cm4ga2VjY2FrMjU2KGVuY29kZVBhY2tlZChbXCJhZGRyZXNzXCIsIFwidWludDI1NlwiLCBcInVpbnQyNTZcIiwgXCJhZGRyZXNzXCJdLCBbXG4gICAgICAgIGdldEFkZHJlc3Mob3B0aW9ucy5lbnRyeS5hZGRyZXNzKSxcbiAgICAgICAgY29udmVydFF1YW50aXR5KHtcbiAgICAgICAgICAgIHF1YW50aXR5OiBvcHRpb25zLmVudHJ5Lm1heENsYWltYWJsZSB8fCBcInVubGltaXRlZFwiLFxuICAgICAgICAgICAgdG9rZW5EZWNpbWFsczogb3B0aW9ucy50b2tlbkRlY2ltYWxzLFxuICAgICAgICB9KSxcbiAgICAgICAgY29udmVydFF1YW50aXR5KHtcbiAgICAgICAgICAgIHF1YW50aXR5OiBvcHRpb25zLmVudHJ5LnByaWNlIHx8IFwidW5saW1pdGVkXCIsXG4gICAgICAgICAgICB0b2tlbkRlY2ltYWxzOiBjdXJyZW5jeURlY2ltYWxzLFxuICAgICAgICB9KSxcbiAgICAgICAgZ2V0QWRkcmVzcyhjdXJyZW5jeUFkZHJlc3MpLFxuICAgIF0pKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2gtZW50cnkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/utils/extensions/drops/hash-entry.js\n"));

/***/ })

}]);