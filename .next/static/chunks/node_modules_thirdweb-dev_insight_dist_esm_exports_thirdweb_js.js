"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb-dev_insight_dist_esm_exports_thirdweb_js"],{

/***/ "./node_modules/@hey-api/client-fetch/dist/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@hey-api/client-fetch/dist/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClient: function() { return /* binding */ J; },\n/* harmony export */   createConfig: function() { return /* binding */ w; },\n/* harmony export */   formDataBodySerializer: function() { return /* binding */ v; },\n/* harmony export */   jsonBodySerializer: function() { return /* binding */ R; },\n/* harmony export */   urlSearchParamsBodySerializer: function() { return /* binding */ $; }\n/* harmony export */ });\nvar A=async(t,r)=>{let e=typeof r==\"function\"?await r(t):r;if(e)return t.scheme===\"bearer\"?`Bearer ${e}`:t.scheme===\"basic\"?`Basic ${btoa(e)}`:e},z=(t,r,e)=>{typeof e==\"string\"||e instanceof Blob?t.append(r,e):t.append(r,JSON.stringify(e));},j=(t,r,e)=>{typeof e==\"string\"?t.append(r,e):t.append(r,JSON.stringify(e));},v={bodySerializer:t=>{let r=new FormData;return Object.entries(t).forEach(([e,a])=>{a!=null&&(Array.isArray(a)?a.forEach(i=>z(r,e,i)):z(r,e,a));}),r}},R={bodySerializer:t=>JSON.stringify(t,(r,e)=>typeof e==\"bigint\"?e.toString():e)},$={bodySerializer:t=>{let r=new URLSearchParams;return Object.entries(t).forEach(([e,a])=>{a!=null&&(Array.isArray(a)?a.forEach(i=>j(r,e,i)):j(r,e,a));}),r.toString()}},U=t=>{switch(t){case \"label\":return \".\";case \"matrix\":return \";\";case \"simple\":return \",\";default:return \"&\"}},_=t=>{switch(t){case \"form\":return \",\";case \"pipeDelimited\":return \"|\";case \"spaceDelimited\":return \"%20\";default:return \",\"}},D=t=>{switch(t){case \"label\":return \".\";case \"matrix\":return \";\";case \"simple\":return \",\";default:return \"&\"}},O=({allowReserved:t,explode:r,name:e,style:a,value:i})=>{if(!r){let s=(t?i:i.map(l=>encodeURIComponent(l))).join(_(a));switch(a){case \"label\":return `.${s}`;case \"matrix\":return `;${e}=${s}`;case \"simple\":return s;default:return `${e}=${s}`}}let o=U(a),n=i.map(s=>a===\"label\"||a===\"simple\"?t?s:encodeURIComponent(s):y({allowReserved:t,name:e,value:s})).join(o);return a===\"label\"||a===\"matrix\"?o+n:n},y=({allowReserved:t,name:r,value:e})=>{if(e==null)return \"\";if(typeof e==\"object\")throw new Error(\"Deeply-nested arrays/objects aren\\u2019t supported. Provide your own `querySerializer()` to handle these.\");return `${r}=${t?e:encodeURIComponent(e)}`},q=({allowReserved:t,explode:r,name:e,style:a,value:i})=>{if(i instanceof Date)return `${e}=${i.toISOString()}`;if(a!==\"deepObject\"&&!r){let s=[];Object.entries(i).forEach(([f,u])=>{s=[...s,f,t?u:encodeURIComponent(u)];});let l=s.join(\",\");switch(a){case \"form\":return `${e}=${l}`;case \"label\":return `.${l}`;case \"matrix\":return `;${e}=${l}`;default:return l}}let o=D(a),n=Object.entries(i).map(([s,l])=>y({allowReserved:t,name:a===\"deepObject\"?`${e}[${s}]`:s,value:l})).join(o);return a===\"label\"||a===\"matrix\"?o+n:n};var H=/\\{[^{}]+\\}/g,B=({path:t,url:r})=>{let e=r,a=r.match(H);if(a)for(let i of a){let o=false,n=i.substring(1,i.length-1),s=\"simple\";n.endsWith(\"*\")&&(o=true,n=n.substring(0,n.length-1)),n.startsWith(\".\")?(n=n.substring(1),s=\"label\"):n.startsWith(\";\")&&(n=n.substring(1),s=\"matrix\");let l=t[n];if(l==null)continue;if(Array.isArray(l)){e=e.replace(i,O({explode:o,name:n,style:s,value:l}));continue}if(typeof l==\"object\"){e=e.replace(i,q({explode:o,name:n,style:s,value:l}));continue}if(s===\"matrix\"){e=e.replace(i,`;${y({name:n,value:l})}`);continue}let f=encodeURIComponent(s===\"label\"?`.${l}`:l);e=e.replace(i,f);}return e},E=({allowReserved:t,array:r,object:e}={})=>i=>{let o=[];if(i&&typeof i==\"object\")for(let n in i){let s=i[n];if(s!=null){if(Array.isArray(s)){o=[...o,O({allowReserved:t,explode:true,name:n,style:\"form\",value:s,...r})];continue}if(typeof s==\"object\"){o=[...o,q({allowReserved:t,explode:true,name:n,style:\"deepObject\",value:s,...e})];continue}o=[...o,y({allowReserved:t,name:n,value:s})];}}return o.join(\"&\")},P=t=>{if(!t)return \"stream\";let r=t.split(\";\")[0]?.trim();if(r){if(r.startsWith(\"application/json\")||r.endsWith(\"+json\"))return \"json\";if(r===\"multipart/form-data\")return \"formData\";if([\"application/\",\"audio/\",\"image/\",\"video/\"].some(e=>r.startsWith(e)))return \"blob\";if(r.startsWith(\"text/\"))return \"text\"}},I=async({security:t,...r})=>{for(let e of t){let a=await A(e,r.auth);if(!a)continue;let i=e.name??\"Authorization\";switch(e.in){case \"query\":r.query||(r.query={}),r.query[i]=a;break;case \"cookie\":r.headers.append(\"Cookie\",`${i}=${a}`);break;case \"header\":default:r.headers.set(i,a);break}return}},S=t=>W({baseUrl:t.baseUrl,path:t.path,query:t.query,querySerializer:typeof t.querySerializer==\"function\"?t.querySerializer:E(t.querySerializer),url:t.url}),W=({baseUrl:t,path:r,query:e,querySerializer:a,url:i})=>{let o=i.startsWith(\"/\")?i:`/${i}`,n=(t??\"\")+o;r&&(n=B({path:r,url:n}));let s=e?a(e):\"\";return s.startsWith(\"?\")&&(s=s.substring(1)),s&&(n+=`?${s}`),n},C=(t,r)=>{let e={...t,...r};return e.baseUrl?.endsWith(\"/\")&&(e.baseUrl=e.baseUrl.substring(0,e.baseUrl.length-1)),e.headers=x(t.headers,r.headers),e},x=(...t)=>{let r=new Headers;for(let e of t){if(!e||typeof e!=\"object\")continue;let a=e instanceof Headers?e.entries():Object.entries(e);for(let[i,o]of a)if(o===null)r.delete(i);else if(Array.isArray(o))for(let n of o)r.append(i,n);else o!==undefined&&r.set(i,typeof o==\"object\"?JSON.stringify(o):o);}return r},h=class{_fns;constructor(){this._fns=[];}clear(){this._fns=[];}exists(r){return this._fns.indexOf(r)!==-1}eject(r){let e=this._fns.indexOf(r);e!==-1&&(this._fns=[...this._fns.slice(0,e),...this._fns.slice(e+1)]);}use(r){this._fns=[...this._fns,r];}},T=()=>({error:new h,request:new h,response:new h}),N=E({allowReserved:false,array:{explode:true,style:\"form\"},object:{explode:true,style:\"deepObject\"}}),Q={\"Content-Type\":\"application/json\"},w=(t={})=>({...R,headers:Q,parseAs:\"auto\",querySerializer:N,...t});var J=(t={})=>{let r=C(w(),t),e=()=>({...r}),a=n=>(r=C(r,n),e()),i=T(),o=async n=>{let s={...r,...n,fetch:n.fetch??r.fetch??globalThis.fetch,headers:x(r.headers,n.headers)};s.security&&await I({...s,security:s.security}),s.body&&s.bodySerializer&&(s.body=s.bodySerializer(s.body)),(s.body===undefined||s.body===\"\")&&s.headers.delete(\"Content-Type\");let l=S(s),f={redirect:\"follow\",...s},u=new Request(l,f);for(let p of i.request._fns)u=await p(u,s);let k=s.fetch,c=await k(u);for(let p of i.response._fns)c=await p(c,u,s);let m={request:u,response:c};if(c.ok){if(c.status===204||c.headers.get(\"Content-Length\")===\"0\")return {data:{},...m};let p=(s.parseAs===\"auto\"?P(c.headers.get(\"Content-Type\")):s.parseAs)??\"json\";if(p===\"stream\")return {data:c.body,...m};let b=await c[p]();return p===\"json\"&&(s.responseValidator&&await s.responseValidator(b),s.responseTransformer&&(b=await s.responseTransformer(b))),{data:b,...m}}let g=await c.text();try{g=JSON.parse(g);}catch{}let d=g;for(let p of i.error._fns)d=await p(g,c,u,s);if(d=d||{},s.throwOnError)throw d;return {error:d,...m}};return {buildUrl:S,connect:n=>o({...n,method:\"CONNECT\"}),delete:n=>o({...n,method:\"DELETE\"}),get:n=>o({...n,method:\"GET\"}),getConfig:e,head:n=>o({...n,method:\"HEAD\"}),interceptors:i,options:n=>o({...n,method:\"OPTIONS\"}),patch:n=>o({...n,method:\"PATCH\"}),post:n=>o({...n,method:\"POST\"}),put:n=>o({...n,method:\"PUT\"}),request:o,setConfig:a,trace:n=>o({...n,method:\"TRACE\"})}};//# sourceMappingURL=index.js.map\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@hey-api/client-fetch/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@thirdweb-dev/insight/dist/esm/client/client.gen.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/esm/client/client.gen.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   client: function() { return /* binding */ client; }\n/* harmony export */ });\n/* harmony import */ var _hey_api_client_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hey-api/client-fetch */ \"./node_modules/@hey-api/client-fetch/dist/index.js\");\n// This file is auto-generated by @hey-api/openapi-ts\n\nconst client = (0,_hey_api_client_fetch__WEBPACK_IMPORTED_MODULE_0__.createClient)((0,_hey_api_client_fetch__WEBPACK_IMPORTED_MODULE_0__.createConfig)());\n//# sourceMappingURL=client.gen.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvZXNtL2NsaWVudC9jbGllbnQuZ2VuLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDb0U7QUFDN0QsZUFBZSxtRUFBWSxDQUFDLG1FQUFZO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L2luc2lnaHQvZGlzdC9lc20vY2xpZW50L2NsaWVudC5nZW4uanM/NjU3OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgaXMgYXV0by1nZW5lcmF0ZWQgYnkgQGhleS1hcGkvb3BlbmFwaS10c1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50LCBjcmVhdGVDb25maWcsIH0gZnJvbSBcIkBoZXktYXBpL2NsaWVudC1mZXRjaFwiO1xuZXhwb3J0IGNvbnN0IGNsaWVudCA9IGNyZWF0ZUNsaWVudChjcmVhdGVDb25maWcoKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jbGllbnQuZ2VuLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/insight/dist/esm/client/client.gen.js\n"));

/***/ }),

/***/ "./node_modules/@thirdweb-dev/insight/dist/esm/client/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/esm/client/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _types_gen_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.gen.js */ \"./node_modules/@thirdweb-dev/insight/dist/esm/client/types.gen.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _types_gen_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _types_gen_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _sdk_gen_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sdk.gen.js */ \"./node_modules/@thirdweb-dev/insight/dist/esm/client/sdk.gen.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _sdk_gen_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _sdk_gen_js__WEBPACK_IMPORTED_MODULE_1__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n// This file is auto-generated by @hey-api/openapi-ts\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvZXNtL2NsaWVudC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUMrQjtBQUNGO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L2luc2lnaHQvZGlzdC9lc20vY2xpZW50L2luZGV4LmpzPzhlYzAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBmaWxlIGlzIGF1dG8tZ2VuZXJhdGVkIGJ5IEBoZXktYXBpL29wZW5hcGktdHNcbmV4cG9ydCAqIGZyb20gXCIuL3R5cGVzLmdlbi5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vc2RrLmdlbi5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/insight/dist/esm/client/index.js\n"));

/***/ }),

/***/ "./node_modules/@thirdweb-dev/insight/dist/esm/client/sdk.gen.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/esm/client/sdk.gen.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteV1WebhooksByWebhookId: function() { return /* binding */ deleteV1WebhooksByWebhookId; },\n/* harmony export */   getV1Blocks: function() { return /* binding */ getV1Blocks; },\n/* harmony export */   getV1ContractsAbiByContractAddress: function() { return /* binding */ getV1ContractsAbiByContractAddress; },\n/* harmony export */   getV1ContractsMetadataByContractAddress: function() { return /* binding */ getV1ContractsMetadataByContractAddress; },\n/* harmony export */   getV1Events: function() { return /* binding */ getV1Events; },\n/* harmony export */   getV1EventsByContractAddress: function() { return /* binding */ getV1EventsByContractAddress; },\n/* harmony export */   getV1EventsByContractAddressBySignature: function() { return /* binding */ getV1EventsByContractAddressBySignature; },\n/* harmony export */   getV1Nfts: function() { return /* binding */ getV1Nfts; },\n/* harmony export */   getV1NftsBalanceByOwnerAddress: function() { return /* binding */ getV1NftsBalanceByOwnerAddress; },\n/* harmony export */   getV1NftsByContractAddress: function() { return /* binding */ getV1NftsByContractAddress; },\n/* harmony export */   getV1NftsByContractAddressByTokenId: function() { return /* binding */ getV1NftsByContractAddressByTokenId; },\n/* harmony export */   getV1NftsCollectionsByContractAddress: function() { return /* binding */ getV1NftsCollectionsByContractAddress; },\n/* harmony export */   getV1NftsMetadataRefreshByContractAddress: function() { return /* binding */ getV1NftsMetadataRefreshByContractAddress; },\n/* harmony export */   getV1NftsMetadataRefreshByContractAddressByTokenId: function() { return /* binding */ getV1NftsMetadataRefreshByContractAddressByTokenId; },\n/* harmony export */   getV1NftsOwnersByContractAddress: function() { return /* binding */ getV1NftsOwnersByContractAddress; },\n/* harmony export */   getV1NftsOwnersByContractAddressByTokenId: function() { return /* binding */ getV1NftsOwnersByContractAddressByTokenId; },\n/* harmony export */   getV1NftsTransfers: function() { return /* binding */ getV1NftsTransfers; },\n/* harmony export */   getV1NftsTransfersByContractAddress: function() { return /* binding */ getV1NftsTransfersByContractAddress; },\n/* harmony export */   getV1NftsTransfersByContractAddressByTokenId: function() { return /* binding */ getV1NftsTransfersByContractAddressByTokenId; },\n/* harmony export */   getV1NftsTransfersTransactionByTransactionHash: function() { return /* binding */ getV1NftsTransfersTransactionByTransactionHash; },\n/* harmony export */   getV1ResolveByInput: function() { return /* binding */ getV1ResolveByInput; },\n/* harmony export */   getV1TokensErc1155ByOwnerAddress: function() { return /* binding */ getV1TokensErc1155ByOwnerAddress; },\n/* harmony export */   getV1TokensErc20ByOwnerAddress: function() { return /* binding */ getV1TokensErc20ByOwnerAddress; },\n/* harmony export */   getV1TokensErc721ByOwnerAddress: function() { return /* binding */ getV1TokensErc721ByOwnerAddress; },\n/* harmony export */   getV1TokensLookup: function() { return /* binding */ getV1TokensLookup; },\n/* harmony export */   getV1TokensPrice: function() { return /* binding */ getV1TokensPrice; },\n/* harmony export */   getV1TokensPriceSupported: function() { return /* binding */ getV1TokensPriceSupported; },\n/* harmony export */   getV1TokensTransfers: function() { return /* binding */ getV1TokensTransfers; },\n/* harmony export */   getV1TokensTransfersByContractAddress: function() { return /* binding */ getV1TokensTransfersByContractAddress; },\n/* harmony export */   getV1TokensTransfersTransactionByTransactionHash: function() { return /* binding */ getV1TokensTransfersTransactionByTransactionHash; },\n/* harmony export */   getV1Transactions: function() { return /* binding */ getV1Transactions; },\n/* harmony export */   getV1TransactionsByContractAddress: function() { return /* binding */ getV1TransactionsByContractAddress; },\n/* harmony export */   getV1TransactionsByContractAddressBySignature: function() { return /* binding */ getV1TransactionsByContractAddressBySignature; },\n/* harmony export */   getV1WalletsByWalletAddressTransactions: function() { return /* binding */ getV1WalletsByWalletAddressTransactions; },\n/* harmony export */   getV1Webhooks: function() { return /* binding */ getV1Webhooks; },\n/* harmony export */   patchV1WebhooksByWebhookId: function() { return /* binding */ patchV1WebhooksByWebhookId; },\n/* harmony export */   postV1DecodeByContractAddress: function() { return /* binding */ postV1DecodeByContractAddress; },\n/* harmony export */   postV1Webhooks: function() { return /* binding */ postV1Webhooks; },\n/* harmony export */   postV1WebhooksByWebhookIdResendOtp: function() { return /* binding */ postV1WebhooksByWebhookIdResendOtp; },\n/* harmony export */   postV1WebhooksByWebhookIdVerify: function() { return /* binding */ postV1WebhooksByWebhookIdVerify; },\n/* harmony export */   postV1WebhooksTest: function() { return /* binding */ postV1WebhooksTest; }\n/* harmony export */ });\n/* harmony import */ var _client_gen_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client.gen.js */ \"./node_modules/@thirdweb-dev/insight/dist/esm/client/client.gen.js\");\n// This file is auto-generated by @hey-api/openapi-ts\n\n/**\n * Get webhooks\n * Get a list of webhooks or a single webhook by ID\n */\nconst getV1Webhooks = (options) => {\n    return (options?.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/webhooks\",\n        ...options,\n    });\n};\n/**\n * Create webhook\n * Create a new webhook. The webhook will start out as suspended and an OTP code will be sent to the webhook URL. This OTP code must be verified using the Verify Webhook endpoint within 15 minutes.\n */\nconst postV1Webhooks = (options) => {\n    return (options?.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).post({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/webhooks\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options?.headers,\n        },\n    });\n};\n/**\n * Delete webhook\n * Delete a webhook. This action cannot be undone.\n */\nconst deleteV1WebhooksByWebhookId = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).delete({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/webhooks/{webhook_id}\",\n        ...options,\n    });\n};\n/**\n * Update webhook\n * Update a webhook. If the URL is updated, it needs to verified again the same way as when creating a webhook.\n */\nconst patchV1WebhooksByWebhookId = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).patch({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/webhooks/{webhook_id}\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options?.headers,\n        },\n    });\n};\n/**\n * Verify webhook\n * Verify a webhook using a OTP code that was sent to the webhook URL. The webhook will be activated after verification.\n */\nconst postV1WebhooksByWebhookIdVerify = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).post({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/webhooks/{webhook_id}/verify\",\n        ...options,\n    });\n};\n/**\n * Resend OTP code\n * Resend a OTP code to the webhook URL. This will invalidate the old OTP and will again expire after 15 minutes.\n */\nconst postV1WebhooksByWebhookIdResendOtp = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).post({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/webhooks/{webhook_id}/resend-otp\",\n        ...options,\n    });\n};\n/**\n * Test webhook\n * Test your webhook URL. This will send a test event to the webhook URL signed with an example secret 'test123'. NB! The payload does not necessarily match your webhook filters. You can however use it to test signature verification and payload format handling.\n */\nconst postV1WebhooksTest = (options) => {\n    return (options?.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).post({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/webhooks/test\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options?.headers,\n        },\n    });\n};\n/**\n * Get events\n * Get events\n */\nconst getV1Events = (options) => {\n    return (options?.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/events\",\n        ...options,\n    });\n};\n/**\n * Get contract events\n * Get contract events\n */\nconst getV1EventsByContractAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/events/{contractAddress}\",\n        ...options,\n    });\n};\n/**\n * Get contract events with specific signature\n * Get specific contract events\n */\nconst getV1EventsByContractAddressBySignature = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/events/{contractAddress}/{signature}\",\n        ...options,\n    });\n};\n/**\n * Get transactions\n * Get transactions\n */\nconst getV1Transactions = (options) => {\n    return (options?.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/transactions\",\n        ...options,\n    });\n};\n/**\n * Get contract transactions\n * Get contract transactions\n */\nconst getV1TransactionsByContractAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/transactions/{contractAddress}\",\n        ...options,\n    });\n};\n/**\n * Get contract transactions with specific signature\n * Get specific contract transactions\n */\nconst getV1TransactionsByContractAddressBySignature = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/transactions/{contractAddress}/{signature}\",\n        ...options,\n    });\n};\n/**\n * Get token transfers by transaction\n * Get token transfers by transaction\n */\nconst getV1TokensTransfersTransactionByTransactionHash = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/transfers/transaction/{transaction_hash}\",\n        ...options,\n    });\n};\n/**\n * Get token transfers by contract\n * Get token transfers by contract\n */\nconst getV1TokensTransfersByContractAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/transfers/{contract_address}\",\n        ...options,\n    });\n};\n/**\n * Get token transfers by wallet address\n * Get token transfers by wallet address\n */\nconst getV1TokensTransfers = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/transfers\",\n        ...options,\n    });\n};\n/**\n * Get ERC-20 balances by address\n * Get ERC-20 balances for a given address\n */\nconst getV1TokensErc20ByOwnerAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/erc20/{ownerAddress}\",\n        ...options,\n    });\n};\n/**\n * @deprecated\n * Get ERC-721 balances by address\n * Get ERC-721 (NFT) balances for a given address [BEING DEPRECATED IN FAVOR OF /nfts/balance]\n */\nconst getV1TokensErc721ByOwnerAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/erc721/{ownerAddress}\",\n        ...options,\n    });\n};\n/**\n * @deprecated\n * Get ERC-1155 balances by address\n * Get ERC-1155 (Multi Token) balances for a given address [BEING DEPRECATED IN FAVOR OF /nfts/balance]\n */\nconst getV1TokensErc1155ByOwnerAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/erc1155/{ownerAddress}\",\n        ...options,\n    });\n};\n/**\n * Get supported tokens for price data\n * Get supported tokens for price data\n */\nconst getV1TokensPriceSupported = (options) => {\n    return (options?.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/price/supported\",\n        ...options,\n    });\n};\n/**\n * Get token price\n * Get price in USD for given token(s)\n */\nconst getV1TokensPrice = (options) => {\n    return (options?.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/price\",\n        ...options,\n    });\n};\n/**\n * Token lookup\n * Look up a fungible token by symbol\n */\nconst getV1TokensLookup = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/lookup\",\n        ...options,\n    });\n};\n/**\n * Resolve\n * Resolve\n */\nconst getV1ResolveByInput = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/resolve/{input}\",\n        ...options,\n    });\n};\n/**\n * Get blocks\n * Get blocks\n */\nconst getV1Blocks = (options) => {\n    return (options?.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/blocks\",\n        ...options,\n    });\n};\n/**\n * Get contract ABI​\n * Get contract ABI​\n */\nconst getV1ContractsAbiByContractAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/contracts/abi/{contractAddress}\",\n        ...options,\n    });\n};\n/**\n * Get contract metadata​\n * Get contract metadata​\n */\nconst getV1ContractsMetadataByContractAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/contracts/metadata/{contractAddress}\",\n        ...options,\n    });\n};\n/**\n * Decode logs and transactions​\n * Decode logs and transactions​\n */\nconst postV1DecodeByContractAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).post({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/decode/{contractAddress}\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options?.headers,\n        },\n    });\n};\n/**\n * Get NFT balances by address\n * Get NFT balances for a given address\n */\nconst getV1NftsBalanceByOwnerAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/balance/{ownerAddress}\",\n        ...options,\n    });\n};\n/**\n * Get collection\n * Retrieve metadata about a collection\n */\nconst getV1NftsCollectionsByContractAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/collections/{contract_address}\",\n        ...options,\n    });\n};\n/**\n * Get NFTs by owner\n * Get NFTs by owner\n */\nconst getV1Nfts = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts\",\n        ...options,\n    });\n};\n/**\n * Get NFT owners by contract\n * Get NFT owners by contract\n */\nconst getV1NftsOwnersByContractAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/owners/{contract_address}\",\n        ...options,\n    });\n};\n/**\n * Get NFT owners by token\n * Get NFT owners by token\n */\nconst getV1NftsOwnersByContractAddressByTokenId = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/owners/{contract_address}/{token_id}\",\n        ...options,\n    });\n};\n/**\n * Get NFT transfers by owner\n * Get NFT transfers by owner\n */\nconst getV1NftsTransfers = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/transfers\",\n        ...options,\n    });\n};\n/**\n * Get NFT transfers by transaction\n * Get NFT transfers by transaction\n */\nconst getV1NftsTransfersTransactionByTransactionHash = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/transfers/transaction/{transaction_hash}\",\n        ...options,\n    });\n};\n/**\n * Get NFT transfers by contract\n * Get NFT transfers by contract\n */\nconst getV1NftsTransfersByContractAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/transfers/{contract_address}\",\n        ...options,\n    });\n};\n/**\n * Get NFTs by contract\n * Get NFTs by contract\n */\nconst getV1NftsByContractAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/{contract_address}\",\n        ...options,\n    });\n};\n/**\n * Get NFT transfers by token\n * Get NFT transfers by token\n */\nconst getV1NftsTransfersByContractAddressByTokenId = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/transfers/{contract_address}/{token_id}\",\n        ...options,\n    });\n};\n/**\n * Get NFT by token ID\n * Get NFT by token ID\n */\nconst getV1NftsByContractAddressByTokenId = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/{contract_address}/{token_id}\",\n        ...options,\n    });\n};\n/**\n * Force refresh collection metadata\n * Force refresh collection metadata for the specified contract (across multiple chains if provided)\n */\nconst getV1NftsMetadataRefreshByContractAddress = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/metadata/refresh/{contract_address}\",\n        ...options,\n    });\n};\n/**\n * Force refresh token metadata\n * Force refresh token metadata for the specified contract and token ID (across multiple chains if provided)\n */\nconst getV1NftsMetadataRefreshByContractAddressByTokenId = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/metadata/refresh/{contract_address}/{token_id}\",\n        ...options,\n    });\n};\n/**\n * Get wallet transactions\n * Get incoming and outgoing transactions for a wallet\n */\nconst getV1WalletsByWalletAddressTransactions = (options) => {\n    return (options.client ?? _client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n            {\n                scheme: \"bearer\",\n                type: \"http\",\n            },\n            {\n                in: \"query\",\n                name: \"clientId\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/wallets/{wallet_address}/transactions\",\n        ...options,\n    });\n};\n//# sourceMappingURL=sdk.gen.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/insight/dist/esm/client/sdk.gen.js\n"));

/***/ }),

/***/ "./node_modules/@thirdweb-dev/insight/dist/esm/client/types.gen.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/esm/client/types.gen.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n// This file is auto-generated by @hey-api/openapi-ts\n\n//# sourceMappingURL=types.gen.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvZXNtL2NsaWVudC90eXBlcy5nZW4uanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ1U7QUFDViIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvZXNtL2NsaWVudC90eXBlcy5nZW4uanM/MzA3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgaXMgYXV0by1nZW5lcmF0ZWQgYnkgQGhleS1hcGkvb3BlbmFwaS10c1xuZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuZ2VuLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/insight/dist/esm/client/types.gen.js\n"));

/***/ }),

/***/ "./node_modules/@thirdweb-dev/insight/dist/esm/configure.js":
/*!******************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/esm/configure.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   configure: function() { return /* binding */ configure; }\n/* harmony export */ });\n/* harmony import */ var _client_client_gen_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client/client.gen.js */ \"./node_modules/@thirdweb-dev/insight/dist/esm/client/client.gen.js\");\n\nfunction configure(options) {\n    _client_client_gen_js__WEBPACK_IMPORTED_MODULE_0__.client.setConfig({\n        headers: {\n            ...(options.clientId && { \"x-client-id\": options.clientId }),\n            ...(options.secretKey && { \"x-api-key\": options.secretKey }),\n        },\n        ...(options.override ?? {}),\n    });\n}\n//# sourceMappingURL=configure.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvZXNtL2NvbmZpZ3VyZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRDtBQUN6QztBQUNQLElBQUkseURBQU07QUFDVjtBQUNBLHNDQUFzQyxpQ0FBaUM7QUFDdkUsdUNBQXVDLGdDQUFnQztBQUN2RSxTQUFTO0FBQ1Qsa0NBQWtDO0FBQ2xDLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L2luc2lnaHQvZGlzdC9lc20vY29uZmlndXJlLmpzPzg4NjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2xpZW50IH0gZnJvbSBcIi4vY2xpZW50L2NsaWVudC5nZW4uanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1cmUob3B0aW9ucykge1xuICAgIGNsaWVudC5zZXRDb25maWcoe1xuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAuLi4ob3B0aW9ucy5jbGllbnRJZCAmJiB7IFwieC1jbGllbnQtaWRcIjogb3B0aW9ucy5jbGllbnRJZCB9KSxcbiAgICAgICAgICAgIC4uLihvcHRpb25zLnNlY3JldEtleSAmJiB7IFwieC1hcGkta2V5XCI6IG9wdGlvbnMuc2VjcmV0S2V5IH0pLFxuICAgICAgICB9LFxuICAgICAgICAuLi4ob3B0aW9ucy5vdmVycmlkZSA/PyB7fSksXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25maWd1cmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/insight/dist/esm/configure.js\n"));

/***/ }),

/***/ "./node_modules/@thirdweb-dev/insight/dist/esm/exports/thirdweb.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/esm/exports/thirdweb.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   configure: function() { return /* reexport safe */ _configure_js__WEBPACK_IMPORTED_MODULE_1__.configure; }\n/* harmony export */ });\n/* harmony import */ var _client_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/index.js */ \"./node_modules/@thirdweb-dev/insight/dist/esm/client/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _client_index_js__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"configure\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _client_index_js__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _configure_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../configure.js */ \"./node_modules/@thirdweb-dev/insight/dist/esm/configure.js\");\n\n\n//# sourceMappingURL=thirdweb.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvZXNtL2V4cG9ydHMvdGhpcmR3ZWIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW1DO0FBQ1M7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0aGlyZHdlYi1kZXYvaW5zaWdodC9kaXN0L2VzbS9leHBvcnRzL3RoaXJkd2ViLmpzP2E3OGUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4uL2NsaWVudC9pbmRleC5qc1wiO1xuZXhwb3J0IHsgY29uZmlndXJlIH0gZnJvbSBcIi4uL2NvbmZpZ3VyZS5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGhpcmR3ZWIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/insight/dist/esm/exports/thirdweb.js\n"));

/***/ })

}]);