"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb_dist_esm_react_web_wallets_injected_locale_kr_js"],{

/***/ "./node_modules/thirdweb/dist/esm/react/web/wallets/injected/locale/kr.js":
/*!********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/react/web/wallets/injected/locale/kr.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/**\n * @internal\n */\nconst injectedWalletLocale = (wallet) => ({\n    connectionScreen: {\n        inProgress: \"확인 대기 중\",\n        failed: \"연결 실패\",\n        instruction: `${wallet}에서 연결 요청을 수락하세요`,\n        retry: \"다시 시도하세요\",\n    },\n    getStartedScreen: {\n        instruction: `Scan the QR code to download the ${wallet} app`,\n    },\n    scanScreen: {\n        instruction: `Scan the QR code with the ${wallet} app to connect`,\n    },\n    getStartedLink: `Don't have ${wallet}?`,\n    download: {\n        chrome: \"Chrome 확장 프로그램 다운로드\",\n        android: \"Google Play에서 다운로드\",\n        iOS: \"App Store에서 다운로드\",\n    },\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (injectedWalletLocale);\n//# sourceMappingURL=kr.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vcmVhY3Qvd2ViL3dhbGxldHMvaW5qZWN0ZWQvbG9jYWxlL2tyLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixPQUFPO0FBQy9CO0FBQ0EsS0FBSztBQUNMO0FBQ0EseURBQXlELFFBQVE7QUFDakUsS0FBSztBQUNMO0FBQ0Esa0RBQWtELFFBQVE7QUFDMUQsS0FBSztBQUNMLGtDQUFrQyxPQUFPO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLENBQUM7QUFDRCwrREFBZSxvQkFBb0IsRUFBQztBQUNwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vcmVhY3Qvd2ViL3dhbGxldHMvaW5qZWN0ZWQvbG9jYWxlL2tyLmpzPzI5NjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuY29uc3QgaW5qZWN0ZWRXYWxsZXRMb2NhbGUgPSAod2FsbGV0KSA9PiAoe1xuICAgIGNvbm5lY3Rpb25TY3JlZW46IHtcbiAgICAgICAgaW5Qcm9ncmVzczogXCLtmZXsnbgg64yA6riwIOykkVwiLFxuICAgICAgICBmYWlsZWQ6IFwi7Jew6rKwIOyLpO2MqFwiLFxuICAgICAgICBpbnN0cnVjdGlvbjogYCR7d2FsbGV0feyXkOyEnCDsl7DqsrAg7JqU7LKt7J2EIOyImOudve2VmOyEuOyalGAsXG4gICAgICAgIHJldHJ5OiBcIuuLpOyLnCDsi5zrj4TtlZjshLjsmpRcIixcbiAgICB9LFxuICAgIGdldFN0YXJ0ZWRTY3JlZW46IHtcbiAgICAgICAgaW5zdHJ1Y3Rpb246IGBTY2FuIHRoZSBRUiBjb2RlIHRvIGRvd25sb2FkIHRoZSAke3dhbGxldH0gYXBwYCxcbiAgICB9LFxuICAgIHNjYW5TY3JlZW46IHtcbiAgICAgICAgaW5zdHJ1Y3Rpb246IGBTY2FuIHRoZSBRUiBjb2RlIHdpdGggdGhlICR7d2FsbGV0fSBhcHAgdG8gY29ubmVjdGAsXG4gICAgfSxcbiAgICBnZXRTdGFydGVkTGluazogYERvbid0IGhhdmUgJHt3YWxsZXR9P2AsXG4gICAgZG93bmxvYWQ6IHtcbiAgICAgICAgY2hyb21lOiBcIkNocm9tZSDtmZXsnqUg7ZSE66Gc6re4656oIOuLpOyatOuhnOuTnFwiLFxuICAgICAgICBhbmRyb2lkOiBcIkdvb2dsZSBQbGF57JeQ7IScIOuLpOyatOuhnOuTnFwiLFxuICAgICAgICBpT1M6IFwiQXBwIFN0b3Jl7JeQ7IScIOuLpOyatOuhnOuTnFwiLFxuICAgIH0sXG59KTtcbmV4cG9ydCBkZWZhdWx0IGluamVjdGVkV2FsbGV0TG9jYWxlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9a3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/thirdweb/dist/esm/react/web/wallets/injected/locale/kr.js\n"));

/***/ })

}]);